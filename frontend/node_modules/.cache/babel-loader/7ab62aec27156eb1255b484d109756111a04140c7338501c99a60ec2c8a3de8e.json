{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LenovO\\\\Documents\\\\OtherProjects\\\\ColumbariumManagementSystem\\\\frontend\\\\src\\\\pages\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport Icon from \"../components/icon\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport StatusTag from '../components/dashboard/statusTag';\nimport TabContent from '../components/dashboard/tabContent';\nimport LoadingPage from './loading';\nimport CreateNewElement from \"../components/dashboard/createNewElement\";\nimport EditElement from \"../components/dashboard/editElement\";\nimport AccountModal from \"../components/dashboard/accountModal\";\nimport { fieldsByTab } from \"../config/dashboard/fieldsByTab\";\nimport Tab from '../components/dashboard/tab';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction getCsrf() {\n  const cookies = document.cookie.split(';');\n  for (let i = 0; i < cookies.length; i++) {\n    const cookie = cookies[i].trim();\n    if (cookie.startsWith('csrftoken=')) {\n      return cookie.substring('csrftoken='.length, cookie.length);\n    }\n  }\n}\nexport default function DashboardPage() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const {\n    username,\n    setUsername\n  } = useAuth();\n  const [selectedTab, setSelectedTab] = useState(\"Customers\");\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [openCreateModal, setOpenCreateModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [selectedElements, setSelectedElements] = useState([]);\n  const [elementToEdit, setElementToEdit] = useState(null);\n  const [elements, setElements] = useState([]);\n  const [openAccountModal, setOpenAccountModal] = useState(false);\n  const accountModalRef = useRef(null);\n  const [filter, setFilter] = useState(\"\");\n  const [customerOptions, setCustomerOptions] = useState([]);\n  async function fetchItems(endpoint) {\n    setElements([]);\n    console.log(endpoint, \" fetching items.\");\n    try {\n      await fetch(`http://localhost:8000/api/${endpoint.toLowerCase()}/list-all/`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Session-Token': sessionStorage.getItem('token'),\n          'Authorization': `Session ${sessionStorage.getItem('token')}`\n        },\n        credentials: 'include'\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch items\");\n        } else {\n          return response.json();\n        }\n      }).then(data => {\n        const normalizeKey = s => s.replace(/_([a-z])/g, (_, c) => c.toUpperCase());\n        const normalizeObject = obj => {\n          if (obj === null || obj === undefined) return obj;\n          if (Array.isArray(obj)) return obj.map(normalizeObject);\n          if (typeof obj !== 'object') return obj;\n          const res = {};\n          Object.keys(obj).forEach(k => {\n            const newKey = normalizeKey(k);\n            const val = obj[k];\n            res[newKey] = normalizeObject(val);\n          });\n          return res;\n        };\n        const normalized = Array.isArray(data) ? data.map(normalizeObject) : data;\n        setElements(normalized);\n        console.log(\"Fetched items (normalized): \", normalized);\n      });\n    } catch (Exception) {\n      console.log(\"Error fetching items: \", Exception);\n    }\n  }\n\n  // convert camelCase keys used in the UI back to snake_case for the API\n  const camelToSnake = s => s.replace(/([A-Z])/g, m => '_' + m.toLowerCase());\n  const convertKeysToSnake = obj => {\n    if (obj === null || obj === undefined) return obj;\n    if (Array.isArray(obj)) return obj.map(convertKeysToSnake);\n    if (obj instanceof Date) return obj.toISOString();\n    if (typeof obj !== 'object') return obj;\n    const res = {};\n    Object.keys(obj).forEach(k => {\n      const newKey = camelToSnake(k);\n      res[newKey] = convertKeysToSnake(obj[k]);\n    });\n    return res;\n  };\n  const handleEditClick = () => {\n    if (selectedElements.length === 1) {\n      // ensure customer options are loaded when editing Payments\n      const prepareAndShow = async () => {\n        if (selectedTab === 'Payments') await fetchCustomerOptions();\n        setElementToEdit(elements.find(e => e.id === selectedElements[0]));\n        setShowEditModal(true);\n      };\n      prepareAndShow();\n    }\n  };\n  async function handleRemoveSelected(e) {\n    e.preventDefault();\n    if (selectedElements.length === 0) return;\n    const endpoint = selectedTab.toLowerCase();\n    const confirmation = window.confirm(`Are you sure you want to delete ${selectedElements.length} items? This action cannot be undone.`);\n    if (confirmation) {\n      try {\n        await fetch(`http://localhost:8000/api/${endpoint}/delete/`, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json',\n            'Session-Token': sessionStorage.getItem('token'),\n            'Authorization': `Session ${sessionStorage.getItem('token')}`,\n            'X-CSRFToken': getCsrf()\n          },\n          body: JSON.stringify({\n            element_ids: selectedElements\n          }),\n          credentials: 'include'\n        });\n      } catch (Exception) {\n        console.log(\"Error deleting items: \", Exception);\n      } finally {\n        setSelectedElements([]);\n        await fetchItems(selectedTab);\n      }\n    }\n  }\n  const handleEdit = async data => {\n    // close on both edit and cancel\n    setShowEditModal(false);\n    if (data === null) return;\n    const endpoint = selectedTab.toLowerCase();\n    try {\n      // convert field names to snake_case before sending to API\n      const payload = convertKeysToSnake(data);\n      await fetch(`http://localhost:8000/api/${endpoint}/edit/?${endpoint.slice(0, -1)}_id=${elementToEdit.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Session-Token': sessionStorage.getItem('token'),\n          'Authorization': `Session ${sessionStorage.getItem('token')}`,\n          'X-CSRFToken': getCsrf()\n        },\n        body: JSON.stringify(payload),\n        credentials: 'include'\n      }).then(response => {\n        if (!response.ok) {\n          console.log(\"Failed to edit item\");\n        }\n        return response.json();\n      }).then(data => {\n        console.log(data);\n      });\n    } catch (Exception) {} finally {\n      setSelectedElements([]);\n      setElementToEdit(null);\n      fetchItems(selectedTab);\n    }\n  };\n  const handleCreate = async data => {\n    // close on both create and cancel\n    setOpenCreateModal(false);\n\n    // cancel action (CreateNewElement calls onCreate(null) on cancel)\n    if (data === null) return;\n    const endpoint = selectedTab.toLowerCase();\n    try {\n      // ensure we have an object to convert\n      const safeData = data || {};\n      // convert field names to snake_case before sending to API\n      const payload = convertKeysToSnake(safeData);\n      console.log('Creating', endpoint, 'payload:', payload);\n      await fetch(\"http://localhost:8000/api/\" + endpoint + \"/create-new/\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Session-Token': sessionStorage.getItem('token'),\n          'Authorization': `Session ${sessionStorage.getItem('token')}`,\n          'X-CSRFToken': getCsrf()\n        },\n        body: JSON.stringify(payload),\n        credentials: 'include'\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(\"Failed to create item\");\n        }\n        return response.json();\n      }).then(data => {\n        console.log(data);\n      });\n      await fetchItems(selectedTab);\n    } catch (error) {\n      console.error(\"Error creating item: \", error);\n    }\n  };\n  useEffect(() => {\n    setFilter(\"\");\n    const storedUsername = username || sessionStorage.getItem('username');\n    if (storedUsername) {\n      setUsername(storedUsername);\n    }\n    fetchItems(selectedTab);\n    const loader = setTimeout(() => {\n      setLoading(false);\n    }, 800);\n    return () => {\n      clearTimeout(loader);\n    };\n  }, [username, selectedTab, setUsername]);\n\n  // for account modal\n  useEffect(() => {\n    function handleClickOutside(e) {\n      if (accountModalRef.current && !accountModalRef.current.contains(e.target)) {\n        setOpenAccountModal(false);\n      }\n    }\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  });\n  const handleTabSelect = tab => {\n    setElements([]);\n    setSelectedElements([]);\n    setSelectedTab(tab);\n    setSearchQuery(\"\");\n\n    // fetch new items for the selected tab\n    console.log(\"Switching to tab:\", tab);\n    fetchItems(tab);\n  };\n\n  // fetch customer names to use as options for Payments.payer select\n  const fetchCustomerOptions = async () => {\n    try {\n      const res = await fetch('http://localhost:8000/api/customers/list-all/', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Session-Token': sessionStorage.getItem('token'),\n          'Authorization': `Session ${sessionStorage.getItem('token')}`\n        },\n        credentials: 'include'\n      });\n      if (!res.ok) throw new Error('Failed to fetch customers');\n      const data = await res.json();\n\n      // normalize keys (reuse normalizeKey logic)\n      const normalizeKey = s => s.replace(/_([a-z])/g, (_, c) => c.toUpperCase());\n      const normalizeObject = obj => {\n        if (obj === null || obj === undefined) return obj;\n        if (Array.isArray(obj)) return obj.map(normalizeObject);\n        if (typeof obj !== 'object') return obj;\n        const res = {};\n        Object.keys(obj).forEach(k => {\n          const newKey = normalizeKey(k);\n          res[newKey] = normalizeObject(obj[k]);\n        });\n        return res;\n      };\n      const normalized = Array.isArray(data) ? data.map(normalizeObject) : [];\n      const opts = normalized.map(c => ({\n        value: c.id,\n        label: c.name || c.fullName || `#${String(c.id).padStart(3, '0')}`\n      }));\n      setCustomerOptions(opts);\n    } catch (err) {\n      console.error('Error fetching customer options', err);\n      setCustomerOptions([]);\n    }\n  };\n  const handleSelectRow = id => {\n    console.log(id);\n    setSelectedElements(prev => prev.includes(id) ? prev.filter(ppid => ppid !== id) : [...prev, id]);\n  };\n  const handleSelectAll = checked => {\n    if (checked) setSelectedElements(elements.map(p => p.id));else setSelectedElements([]);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 330,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen screen overflow-auto items-center flex flex-col bg-[#fbfbfb]\",\n    children: [/*#__PURE__*/_jsxDEV(\"title\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-w-[90%] min-h-[80%] max-w-[100%] max-h-[100%]\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header bg-white w-full self-center flex flex-row justify-between mt-3 rounded-lg p-4 drop-shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-row items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              setSidebarOpen(!sidebarOpen);\n            },\n            className: \"p-2 text-[22px] rounded-full hover:bg-black/10 text-zinc-700 mr-4\",\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              icon: \"fa-solid fa-bars\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 159\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-3xl font-bold text-zinc-700\",\n            children: \"Columbarium Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"accountControl\",\n          className: \"flex flex-row items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setOpenAccountModal(!openAccountModal),\n            className: \"p-2 hover:underline text-md text-zinc-700 mr-4\",\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              icon: \"fa-solid fa-user\",\n              className: \"mr-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 147\n            }, this), username !== \"\" ? username : \"User Not Found\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-[100%] h-[85%] flex flex-row gap-3\",\n        children: [sidebarOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar bg-white w-[20%] h-full self-start flex flex-col mt-3 rounded-lg p-4 drop-shadow-md gap-1\",\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            onClick: () => handleTabSelect(\"Customers\"),\n            icon: \"fa-solid fa-users\",\n            children: \"Customers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            onClick: () => handleTabSelect(\"Payments\"),\n            icon: \"fa-solid fa-credit-card\",\n            children: \"Payments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            onClick: () => handleTabSelect(\"Contacts\"),\n            icon: \"fa-solid fa-address-book\",\n            children: \"Contacts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            onClick: () => handleTabSelect(\"Occupants\"),\n            icon: \"fa-solid fa-box-open\",\n            children: \"Occupants\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            onClick: () => handleTabSelect(\"Niches\"),\n            icon: \"fa-solid fa-square-person-confined\",\n            children: \"Niches\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 25\n          }, this), sessionStorage.getItem(\"permissions\").split(\",\").includes(\"view_audit\") && /*#__PURE__*/_jsxDEV(Tab, {\n            onClick: () => handleTabSelect(\"Audit\"),\n            icon: \"fa-solid fa-users\",\n            children: \"Audit Logs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 101\n          }, this), sessionStorage.getItem(\"permissions\").split(\",\").includes(\"manage_users\") && /*#__PURE__*/_jsxDEV(Tab, {\n            onClick: () => handleTabSelect(\"Users\"),\n            icon: \"fa-solid fa-user-shield\",\n            children: \"User Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            onClick: () => handleTabSelect(\"Analytics\"),\n            icon: \"fa-solid fa-chart-simple\",\n            children: \"Analytics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content transition-all duration-300 ease-out bg-white w-full h-full flex flex-col mt-3 rounded-lg p-4 drop-shadow-md overflow-auto\",\n          children: (() => {\n            const tabs = {\n              Customers: {\n                columns: [{\n                  label: \"\",\n                  key: \"_select\"\n                }, {\n                  label: \"Customer ID\",\n                  key: \"id\",\n                  type: 'number'\n                }, {\n                  label: \"Full Name\",\n                  key: \"name\",\n                  type: 'text'\n                }, {\n                  label: \"Contact Number\",\n                  key: \"contactNumber\",\n                  type: 'text'\n                }, {\n                  label: \"Email\",\n                  key: \"email\",\n                  type: 'text'\n                }, {\n                  label: \"Address\",\n                  key: \"address\",\n                  type: 'text'\n                }, {\n                  label: \"Deceased's Name\",\n                  key: \"deceasedName\",\n                  type: 'text'\n                }, {\n                  label: \"Date Deceased\",\n                  key: \"deceasedDate\",\n                  type: 'date'\n                }, {\n                  label: \"Relationship to Deceased\",\n                  key: \"relationshipToDeceased\",\n                  type: 'text'\n                }],\n                toolbarButtons: [{\n                  label: 'Add Customer',\n                  icon: 'fa-solid fa-plus',\n                  bg: 'bg-blue-500',\n                  textClass: 'text-white',\n                  onClick: () => setOpenCreateModal(true)\n                }, {\n                  label: 'Edit Selected',\n                  icon: 'fa-solid fa-pencil',\n                  onClick: e => {\n                    handleEditClick(e);\n                  }\n                }, {\n                  label: `(${selectedElements.length}) Remove Selected`,\n                  icon: 'fa fa-trash',\n                  bg: 'bg-red-500',\n                  textClass: 'text-white',\n                  onClick: e => {\n                    handleRemoveSelected(e);\n                  }\n                }],\n                rowRenderer: row => {\n                  var _row$id, _row$name, _row$contactNumber, _row$email, _row$address, _row$deceasedName, _row$deceasedDate, _row$relationshipToDe;\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: [\"#\", ((_row$id = row.id) !== null && _row$id !== void 0 ? _row$id : '').toString().padStart(3, \"0\")]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 399,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$name = row.name) !== null && _row$name !== void 0 ? _row$name : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 400,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$contactNumber = row.contactNumber) !== null && _row$contactNumber !== void 0 ? _row$contactNumber : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 401,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$email = row.email) !== null && _row$email !== void 0 ? _row$email : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 402,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$address = row.address) !== null && _row$address !== void 0 ? _row$address : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 403,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$deceasedName = row.deceasedName) !== null && _row$deceasedName !== void 0 ? _row$deceasedName : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 404,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$deceasedDate = row.deceasedDate) !== null && _row$deceasedDate !== void 0 ? _row$deceasedDate : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 405,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$relationshipToDe = row.relationshipToDeceased) !== null && _row$relationshipToDe !== void 0 ? _row$relationshipToDe : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 406,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true);\n                }\n              },\n              Payments: {\n                columns: [{\n                  label: \"\",\n                  key: \"_select\"\n                }, {\n                  label: \"Payment ID\",\n                  key: \"id\",\n                  type: 'number'\n                }, {\n                  label: \"Customer Name\",\n                  key: \"payer\",\n                  type: 'text'\n                }, {\n                  label: \"Amount Paid\",\n                  key: \"amountPaid\",\n                  type: 'number'\n                }, {\n                  label: \"Amount Due\",\n                  key: \"amountDue\",\n                  type: 'number'\n                }, {\n                  label: \"Remaining Balance\",\n                  key: \"remainingBalance\",\n                  type: 'number'\n                }, {\n                  label: \"Maintenance Fee\",\n                  key: \"maintenanceFee\",\n                  type: 'number'\n                }, {\n                  label: \"Date Paid\",\n                  key: \"paymentDate\",\n                  type: 'date'\n                }, {\n                  label: \"Status\",\n                  key: \"status\",\n                  type: 'text'\n                }],\n                toolbarButtons: [{\n                  label: 'Add Payment',\n                  icon: 'fa-solid fa-plus',\n                  bg: 'bg-blue-500',\n                  textClass: 'text-white',\n                  onClick: async () => {\n                    await fetchCustomerOptions();\n                    setOpenCreateModal(true);\n                  }\n                }, {\n                  label: 'Edit Selected',\n                  icon: 'fa-solid fa-pencil',\n                  onClick: e => {\n                    handleEditClick(e);\n                  }\n                }, {\n                  label: `(${selectedElements.length}) Remove Selected`,\n                  icon: 'fa fa-trash',\n                  bg: 'bg-red-500',\n                  textClass: 'text-white',\n                  onClick: e => {\n                    handleRemoveSelected(e);\n                  }\n                }],\n                rowRenderer: row => {\n                  var _row$id2, _ref4, _ref5, _row$amountPaid, _ref6, _row$amountDue, _ref7, _row$remainingBalance, _ref8, _row$maintenanceFee, _ref9, _row$status;\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: [\"#\", ((_row$id2 = row.id) !== null && _row$id2 !== void 0 ? _row$id2 : '').toString().padStart(3, \"0\")]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 429,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: function (_ref, _ref2, _row$payerId, _ref3, _row$payer) {\n                        // try to resolve payerId to a customer name from customerOptions\n                        const payerId = (_ref = (_ref2 = (_row$payerId = row.payerId) !== null && _row$payerId !== void 0 ? _row$payerId : row.payer_id) !== null && _ref2 !== void 0 ? _ref2 : row.payer) !== null && _ref !== void 0 ? _ref : null;\n                        const opt = customerOptions.find(o => String(o.value) === String(payerId));\n                        return opt ? opt.label : (_ref3 = (_row$payer = row.payer) !== null && _row$payer !== void 0 ? _row$payer : row.payerName) !== null && _ref3 !== void 0 ? _ref3 : '';\n                      }()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 430,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: [\"\\u20B1 \", Number((_ref4 = (_ref5 = (_row$amountPaid = row.amountPaid) !== null && _row$amountPaid !== void 0 ? _row$amountPaid : row.amountPaid) !== null && _ref5 !== void 0 ? _ref5 : row.amount_paid) !== null && _ref4 !== void 0 ? _ref4 : 0).toLocaleString(\"en-US\", {\n                        minimumFractionDigits: 2\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 436,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: [\"\\u20B1 \", Number((_ref6 = (_row$amountDue = row.amountDue) !== null && _row$amountDue !== void 0 ? _row$amountDue : row.amount_due) !== null && _ref6 !== void 0 ? _ref6 : 0).toLocaleString(\"en-US\", {\n                        minimumFractionDigits: 2\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 437,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: [\"\\u20B1 \", Number((_ref7 = (_row$remainingBalance = row.remainingBalance) !== null && _row$remainingBalance !== void 0 ? _row$remainingBalance : row.remaining_balance) !== null && _ref7 !== void 0 ? _ref7 : 0).toLocaleString(\"en-US\", {\n                        minimumFractionDigits: 2\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 438,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: [\"\\u20B1 \", Number((_ref8 = (_row$maintenanceFee = row.maintenanceFee) !== null && _row$maintenanceFee !== void 0 ? _row$maintenanceFee : row.maintenance_fee) !== null && _ref8 !== void 0 ? _ref8 : 0).toLocaleString(\"en-US\", {\n                        minimumFractionDigits: 2\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 439,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: row.paymentDate ? new Intl.DateTimeFormat('en-US').format(new Date(row.paymentDate)) : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 440,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: /*#__PURE__*/_jsxDEV(StatusTag, {\n                        status: (_ref9 = (_row$status = row.status) !== null && _row$status !== void 0 ? _row$status : row.state) !== null && _ref9 !== void 0 ? _ref9 : ''\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 441,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 441,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true);\n                }\n              },\n              Contacts: {\n                columns: [{\n                  label: \"\",\n                  key: \"_select\"\n                }, {\n                  label: \"Contact ID\",\n                  key: \"id\",\n                  type: 'number'\n                }, {\n                  label: \"Family Name\",\n                  key: \"familyName\",\n                  type: 'text'\n                }, {\n                  label: \"Deceased's Name\",\n                  key: \"deceasedName\",\n                  type: 'text'\n                }, {\n                  label: \"Deceased Date\",\n                  key: \"deceasedDate\",\n                  type: 'date'\n                }, {\n                  label: \"Address\",\n                  key: \"address\",\n                  type: 'text'\n                }, {\n                  label: \"Contact Number\",\n                  key: \"contactNumber\",\n                  type: 'text'\n                }],\n                toolbarButtons: [{\n                  label: 'Add Contact',\n                  icon: 'fa-solid fa-plus',\n                  bg: 'bg-blue-500',\n                  textClass: 'text-white',\n                  onClick: () => setOpenCreateModal(true)\n                }, {\n                  label: 'Edit Selected',\n                  icon: 'fa-solid fa-pencil',\n                  onClick: e => {\n                    handleEditClick(e);\n                  }\n                }, {\n                  label: `(${selectedElements.length}) Remove Selected`,\n                  icon: 'fa fa-trash',\n                  textClass: 'text-white',\n                  bg: 'bg-red-500 text-white',\n                  onClick: handleRemoveSelected\n                }],\n                rowRenderer: row => {\n                  var _row$id3, _row$familyName, _row$deceasedName2, _row$address2, _row$contactNumber2, _row$status2;\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: [\"#\", ((_row$id3 = row.id) !== null && _row$id3 !== void 0 ? _row$id3 : '').toString().padStart(3, \"0\")]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 463,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$familyName = row.familyName) !== null && _row$familyName !== void 0 ? _row$familyName : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 464,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$deceasedName2 = row.deceasedName) !== null && _row$deceasedName2 !== void 0 ? _row$deceasedName2 : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 465,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: row.deceasedDate ? new Intl.DateTimeFormat('en-US').format(new Date(row.deceasedDate)) : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 466,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$address2 = row.address) !== null && _row$address2 !== void 0 ? _row$address2 : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 467,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$contactNumber2 = row.contactNumber) !== null && _row$contactNumber2 !== void 0 ? _row$contactNumber2 : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 468,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: /*#__PURE__*/_jsxDEV(StatusTag, {\n                        status: (_row$status2 = row.status) !== null && _row$status2 !== void 0 ? _row$status2 : ''\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 469,\n                        columnNumber: 65\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 469,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true);\n                }\n              },\n              Occupants: {\n                columns: [{\n                  label: \"\",\n                  key: \"_select\"\n                }, {\n                  label: \"Occupant ID\",\n                  key: \"id\",\n                  type: 'number'\n                }, {\n                  label: \"Name\",\n                  key: \"name\",\n                  type: 'text'\n                }, {\n                  label: \"Date of Interment\",\n                  key: \"intermentDate\",\n                  type: 'date'\n                }, {\n                  label: \"Niche\",\n                  key: \"niche\",\n                  type: 'text'\n                }],\n                toolbarButtons: [{\n                  label: 'Add Occupant',\n                  icon: 'fa-solid fa-plus',\n                  bg: 'bg-blue-500',\n                  textClass: 'text-white',\n                  onClick: () => setOpenCreateModal(true)\n                }, {\n                  label: 'Edit Selected',\n                  icon: 'fa-solid fa-pencil',\n                  onClick: e => {\n                    handleEditClick(e);\n                  }\n                }, {\n                  label: `(${selectedElements.length}) Remove Selected`,\n                  icon: 'fa fa-trash',\n                  bg: 'bg-red-500',\n                  textClass: 'text-white',\n                  onClick: handleRemoveSelected\n                }],\n                rowRenderer: row => {\n                  var _row$id4, _row$name2, _row$niche;\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: [\"#\", ((_row$id4 = row.id) !== null && _row$id4 !== void 0 ? _row$id4 : '').toString().padStart(3, \"0\")]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 489,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$name2 = row.name) !== null && _row$name2 !== void 0 ? _row$name2 : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 490,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: row.intermentDate ? new Intl.DateTimeFormat('en-US').format(new Date(row.intermentDate)) : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 491,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$niche = row.niche) !== null && _row$niche !== void 0 ? _row$niche : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 492,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true);\n                }\n              },\n              Niches: {\n                columns: [{\n                  label: \"\",\n                  key: \"_select\"\n                }, {\n                  label: \"Niche ID\",\n                  key: \"id\",\n                  type: 'number'\n                }, {\n                  label: \"Deceased's Name\",\n                  key: \"name\",\n                  type: 'text'\n                }, {\n                  label: \"Location\",\n                  key: \"location\",\n                  type: 'text'\n                }, {\n                  label: \"Status\",\n                  key: \"status\",\n                  type: 'text'\n                }],\n                toolbarButtons: [{\n                  label: 'Add Niche',\n                  icon: 'fa-solid fa-plus',\n                  bg: 'bg-blue-500',\n                  textClass: 'text-white',\n                  onClick: () => setOpenCreateModal(true)\n                }, {\n                  label: 'Edit Selected',\n                  icon: 'fa-solid fa-pencil',\n                  onClick: handleEditClick\n                }, {\n                  label: `(${selectedElements.length}) Remove Selected`,\n                  icon: 'fa fa-trash',\n                  bg: 'bg-red-500',\n                  textClass: 'text-white',\n                  onClick: handleRemoveSelected\n                }],\n                rowRenderer: row => {\n                  var _row$id5, _ref0, _row$name3, _row$location, _row$status3;\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: [\"#\", ((_row$id5 = row.id) !== null && _row$id5 !== void 0 ? _row$id5 : '').toString().padStart(3, \"0\")]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 511,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_ref0 = (_row$name3 = row.name) !== null && _row$name3 !== void 0 ? _row$name3 : row.deceased_name) !== null && _ref0 !== void 0 ? _ref0 : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 512,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$location = row.location) !== null && _row$location !== void 0 ? _row$location : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 513,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: /*#__PURE__*/_jsxDEV(StatusTag, {\n                        status: (_row$status3 = row.status) !== null && _row$status3 !== void 0 ? _row$status3 : ''\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 514,\n                        columnNumber: 65\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 514,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true);\n                }\n              },\n              Audit: {\n                columns: [{\n                  label: \"User\",\n                  key: \"user\",\n                  type: 'text'\n                }, {\n                  label: \"Role\",\n                  key: \"role\",\n                  type: 'text'\n                }, {\n                  label: \"IP Address\",\n                  key: \"ipAddress\",\n                  type: 'text'\n                }, {\n                  label: \"Object ID\",\n                  key: \"objectId\",\n                  type: 'text'\n                }, {\n                  label: \"Action\",\n                  key: \"action\",\n                  type: 'text'\n                }, {\n                  label: \"Application\",\n                  key: \"app\",\n                  type: 'text'\n                }, {\n                  label: \"URL\",\n                  key: \"path\",\n                  type: 'text'\n                }, {\n                  label: \"Timestamp\",\n                  key: \"timestamp\",\n                  type: 'date'\n                }],\n                toolbarButtons: [],\n                rowRenderer: row => {\n                  var _row$user, _row$role, _row$ipAddress, _row$responseData$ids, _row$responseData, _row$responseData$ids2, _row$action, _row$app, _row$path;\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$user = row.user) !== null && _row$user !== void 0 ? _row$user : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 532,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$role = row.role) !== null && _row$role !== void 0 ? _row$role : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 533,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$ipAddress = row.ipAddress) !== null && _row$ipAddress !== void 0 ? _row$ipAddress : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 534,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$responseData$ids = (_row$responseData = row.responseData) === null || _row$responseData === void 0 ? void 0 : (_row$responseData$ids2 = _row$responseData.ids) === null || _row$responseData$ids2 === void 0 ? void 0 : _row$responseData$ids2.join(', ')) !== null && _row$responseData$ids !== void 0 ? _row$responseData$ids : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 535,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$action = row.action) !== null && _row$action !== void 0 ? _row$action : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 536,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$app = row.app) !== null && _row$app !== void 0 ? _row$app : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 537,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$path = row.path) !== null && _row$path !== void 0 ? _row$path : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 538,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: row.timestamp ? new Intl.DateTimeFormat('en-US', {\n                        year: 'numeric',\n                        month: 'numeric',\n                        day: 'numeric',\n                        hour: 'numeric',\n                        minute: 'numeric',\n                        second: 'numeric'\n                      }).format(new Date(row.timestamp)) : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 539,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true);\n                }\n              },\n              Users: {\n                columns: [{\n                  label: \"\",\n                  key: \"_select\"\n                }, {\n                  label: \"User ID\",\n                  key: \"id\",\n                  type: 'number'\n                }, {\n                  label: \"Username\",\n                  key: \"username\",\n                  type: 'text'\n                }, {\n                  label: \"Role\",\n                  key: \"role\",\n                  type: 'text'\n                }],\n                toolbarButtons: [{\n                  label: 'Add User',\n                  icon: 'fa-solid fa-plus',\n                  bg: 'bg-blue-500',\n                  textClass: 'text-white',\n                  onClick: () => setOpenCreateModal(true)\n                }, {\n                  label: 'Edit Selected',\n                  icon: 'fa-solid fa-pencil',\n                  onClick: handleEditClick\n                }, {\n                  label: `(${selectedElements.length}) Remove Selected`,\n                  icon: 'fa fa-trash',\n                  bg: 'bg-red-500',\n                  textClass: 'text-white',\n                  onClick: handleRemoveSelected\n                }],\n                rowRenderer: row => {\n                  var _row$id6, _row$username, _row$role2;\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$id6 = row.id) !== null && _row$id6 !== void 0 ? _row$id6 : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 558,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$username = row.username) !== null && _row$username !== void 0 ? _row$username : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 559,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$role2 = row.role) !== null && _row$role2 !== void 0 ? _row$role2 : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 560,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true);\n                }\n              }\n              // Add other tabs here\n            };\n            const cfg = tabs[selectedTab];\n            if (!cfg) return null;\n            return /*#__PURE__*/_jsxDEV(TabContent, {\n              title: selectedTab,\n              searchQuery: searchQuery,\n              onSearchChange: setSearchQuery,\n              toolbarButtons: cfg.toolbarButtons,\n              columns: cfg.columns,\n              data: elements.length > 0 ? elements : [],\n              selectedItems: selectedElements,\n              onSelectAll: handleSelectAll,\n              onSelectRow: handleSelectRow,\n              getRowKey: row => row.id,\n              onFilterChange: value => setFilter(value),\n              children: cfg.rowRenderer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 33\n            }, this);\n          })()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }, this), openCreateModal && (() => {\n      let fieldsToPass = fieldsByTab[selectedTab];\n      if (selectedTab === 'Payments') {\n        // ensure options are available\n        const paymentsFields = (fieldsByTab.Payments || []).map(f => ({\n          ...f\n        }));\n        // replace payerId field with select options\n        fieldsToPass = paymentsFields.map(f => f.name === 'payerId' ? {\n          ...f,\n          type: 'select',\n          options: customerOptions.length ? customerOptions : [{\n            value: '',\n            label: 'No customers'\n          }]\n        } : f);\n      }\n      return /*#__PURE__*/_jsxDEV(CreateNewElement, {\n        tab: selectedTab,\n        onCreate: handleCreate,\n        fields: fieldsToPass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 24\n      }, this);\n    })(), showEditModal && (() => {\n      let editFields = fieldsByTab[selectedTab];\n      if (selectedTab === 'Payments') {\n        const paymentsFields = (fieldsByTab.Payments || []).map(f => ({\n          ...f\n        }));\n        editFields = paymentsFields.map(f => f.name === 'payerId' ? {\n          ...f,\n          type: 'select',\n          options: customerOptions.length ? customerOptions : [{\n            value: '',\n            label: 'No customers'\n          }]\n        } : f);\n      }\n      return /*#__PURE__*/_jsxDEV(EditElement, {\n        tab: selectedTab,\n        elementData: elementToEdit,\n        fields: editFields,\n        onEdit: handleEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 24\n      }, this);\n    })(), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: accountModalRef,\n      children: /*#__PURE__*/_jsxDEV(AccountModal, {\n        isOpen: openAccountModal,\n        username: username,\n        role: sessionStorage.getItem(\"role\") || 'Staff'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 333,\n    columnNumber: 9\n  }, this);\n}\n_s(DashboardPage, \"Q9stqd1lTb+f+FdaGLoiF2sHF7Q=\", false, function () {\n  return [useAuth];\n});\n_c = DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["Icon","useState","useEffect","useRef","useAuth","StatusTag","TabContent","LoadingPage","CreateNewElement","EditElement","AccountModal","fieldsByTab","Tab","jsxDEV","_jsxDEV","Fragment","_Fragment","getCsrf","cookies","document","cookie","split","i","length","trim","startsWith","substring","DashboardPage","_s","loading","setLoading","username","setUsername","selectedTab","setSelectedTab","sidebarOpen","setSidebarOpen","searchQuery","setSearchQuery","openCreateModal","setOpenCreateModal","showEditModal","setShowEditModal","selectedElements","setSelectedElements","elementToEdit","setElementToEdit","elements","setElements","openAccountModal","setOpenAccountModal","accountModalRef","filter","setFilter","customerOptions","setCustomerOptions","fetchItems","endpoint","console","log","fetch","toLowerCase","method","headers","sessionStorage","getItem","credentials","then","response","ok","Error","json","data","normalizeKey","s","replace","_","c","toUpperCase","normalizeObject","obj","undefined","Array","isArray","map","res","Object","keys","forEach","k","newKey","val","normalized","Exception","camelToSnake","m","convertKeysToSnake","Date","toISOString","handleEditClick","prepareAndShow","fetchCustomerOptions","find","e","id","handleRemoveSelected","preventDefault","confirmation","window","confirm","body","JSON","stringify","element_ids","handleEdit","payload","slice","handleCreate","safeData","error","storedUsername","loader","setTimeout","clearTimeout","handleClickOutside","current","contains","target","addEventListener","removeEventListener","handleTabSelect","tab","opts","value","label","name","fullName","String","padStart","err","handleSelectRow","prev","includes","ppid","handleSelectAll","checked","p","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","icon","tabs","Customers","columns","key","type","toolbarButtons","bg","textClass","rowRenderer","row","_row$id","_row$name","_row$contactNumber","_row$email","_row$address","_row$deceasedName","_row$deceasedDate","_row$relationshipToDe","toString","contactNumber","email","address","deceasedName","deceasedDate","relationshipToDeceased","Payments","_row$id2","_ref4","_ref5","_row$amountPaid","_ref6","_row$amountDue","_ref7","_row$remainingBalance","_ref8","_row$maintenanceFee","_ref9","_row$status","_ref","_ref2","_row$payerId","_ref3","_row$payer","payerId","payer_id","payer","opt","o","payerName","Number","amountPaid","amount_paid","toLocaleString","minimumFractionDigits","amountDue","amount_due","remainingBalance","remaining_balance","maintenanceFee","maintenance_fee","paymentDate","Intl","DateTimeFormat","format","status","state","Contacts","_row$id3","_row$familyName","_row$deceasedName2","_row$address2","_row$contactNumber2","_row$status2","familyName","Occupants","_row$id4","_row$name2","_row$niche","intermentDate","niche","Niches","_row$id5","_ref0","_row$name3","_row$location","_row$status3","deceased_name","location","Audit","_row$user","_row$role","_row$ipAddress","_row$responseData$ids","_row$responseData","_row$responseData$ids2","_row$action","_row$app","_row$path","user","role","ipAddress","responseData","ids","join","action","app","path","timestamp","year","month","day","hour","minute","second","Users","_row$id6","_row$username","_row$role2","cfg","title","onSearchChange","selectedItems","onSelectAll","onSelectRow","getRowKey","onFilterChange","fieldsToPass","paymentsFields","f","options","onCreate","fields","editFields","elementData","onEdit","ref","isOpen","_c","$RefreshReg$"],"sources":["C:/Users/LenovO/Documents/OtherProjects/ColumbariumManagementSystem/frontend/src/pages/dashboard.js"],"sourcesContent":["import Icon from \"../components/icon\";\r\n\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport StatusTag from '../components/dashboard/statusTag';\r\nimport TabContent from '../components/dashboard/tabContent';\r\n\r\nimport LoadingPage from './loading';\r\nimport CreateNewElement from \"../components/dashboard/createNewElement\";\r\nimport EditElement from \"../components/dashboard/editElement\";\r\nimport AccountModal from \"../components/dashboard/accountModal\";\r\n\r\nimport { fieldsByTab } from \"../config/dashboard/fieldsByTab\";\r\n\r\nimport Tab from '../components/dashboard/tab';\r\n\r\nfunction getCsrf() {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n        const cookie = cookies[i].trim();\r\n        if (cookie.startsWith('csrftoken=')) {\r\n            return cookie.substring('csrftoken='.length, cookie.length);\r\n        }\r\n    }\r\n}\r\n\r\nexport default function DashboardPage() {\r\n    const [loading, setLoading] = useState(true);\r\n    const { username, setUsername } = useAuth();\r\n    const [selectedTab, setSelectedTab] = useState(\"Customers\");\r\n    const [sidebarOpen, setSidebarOpen] = useState(true);\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n    const [openCreateModal, setOpenCreateModal] = useState(false);\r\n    const [showEditModal, setShowEditModal] = useState(false);\r\n\r\n    const [selectedElements, setSelectedElements] = useState([]);\r\n    const [elementToEdit, setElementToEdit] = useState(null);\r\n    const [elements, setElements] = useState([])\r\n\r\n    const [openAccountModal, setOpenAccountModal] = useState(false);\r\n    const accountModalRef = useRef(null);\r\n    const [filter, setFilter] = useState(\"\");\r\n    const [customerOptions, setCustomerOptions] = useState([]);\r\n    \r\n    async function fetchItems(endpoint) {\r\n        setElements([]);\r\n        console.log(endpoint, \" fetching items.\");\r\n        try {\r\n            await fetch (`http://localhost:8000/api/${endpoint.toLowerCase()}/list-all/`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Session-Token': sessionStorage.getItem('token'),\r\n                    'Authorization': `Session ${sessionStorage.getItem('token')}`\r\n                },\r\n                credentials: 'include',\r\n            }).then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error(\"Failed to fetch items\");\r\n                } else {\r\n                    return response.json();\r\n                }\r\n            }).then(data => {\r\n                const normalizeKey = (s) => s.replace(/_([a-z])/g, (_, c) => c.toUpperCase());\r\n\r\n                const normalizeObject = (obj) => {\r\n                    if (obj === null || obj === undefined) return obj;\r\n                    if (Array.isArray(obj)) return obj.map(normalizeObject);\r\n                    if (typeof obj !== 'object') return obj;\r\n                    const res = {};\r\n                    Object.keys(obj).forEach(k => {\r\n                        const newKey = normalizeKey(k);\r\n                        const val = obj[k];\r\n                        res[newKey] = normalizeObject(val);\r\n                    });\r\n                    return res;\r\n                }\r\n\r\n                const normalized = Array.isArray(data) ? data.map(normalizeObject) : data;\r\n                setElements(normalized);\r\n                console.log(\"Fetched items (normalized): \", normalized);\r\n            })\r\n        } catch (Exception) {\r\n            console.log(\"Error fetching items: \", Exception);\r\n        }\r\n    }\r\n\r\n    // convert camelCase keys used in the UI back to snake_case for the API\r\n    const camelToSnake = (s) => s.replace(/([A-Z])/g, (m) => '_' + m.toLowerCase());\r\n\r\n    const convertKeysToSnake = (obj) => {\r\n        if (obj === null || obj === undefined) return obj;\r\n        if (Array.isArray(obj)) return obj.map(convertKeysToSnake);\r\n        if (obj instanceof Date) return obj.toISOString();\r\n        if (typeof obj !== 'object') return obj;\r\n\r\n        const res = {};\r\n        Object.keys(obj).forEach((k) => {\r\n            const newKey = camelToSnake(k);\r\n            res[newKey] = convertKeysToSnake(obj[k]);\r\n        });\r\n        return res;\r\n    }\r\n\r\n    const handleEditClick = () => {\r\n         if (selectedElements.length === 1) {\r\n            // ensure customer options are loaded when editing Payments\r\n            const prepareAndShow = async () => {\r\n                if (selectedTab === 'Payments') await fetchCustomerOptions();\r\n                setElementToEdit(elements.find(e => e.id === selectedElements[0]));\r\n                setShowEditModal(true);\r\n            }\r\n            prepareAndShow();\r\n         }\r\n        }\r\n    \r\n\r\n    async function handleRemoveSelected(e) {\r\n        e.preventDefault();\r\n\r\n        if (selectedElements.length === 0) return;\r\n\r\n        const endpoint = selectedTab.toLowerCase();\r\n\r\n        const confirmation = window.confirm(`Are you sure you want to delete ${selectedElements.length} items? This action cannot be undone.`);\r\n\r\n        if (confirmation) {\r\n            try {\r\n                await fetch(`http://localhost:8000/api/${endpoint}/delete/`, {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Session-Token': sessionStorage.getItem('token'),\r\n                        'Authorization': `Session ${sessionStorage.getItem('token')}`,\r\n                        'X-CSRFToken': getCsrf(),\r\n                    },\r\n                    body: JSON.stringify({ element_ids: selectedElements }),\r\n                    credentials: 'include',\r\n                })\r\n            } catch (Exception) {\r\n                console.log(\"Error deleting items: \", Exception);\r\n            } finally {\r\n                setSelectedElements([]);\r\n\r\n                await fetchItems(selectedTab);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleEdit = async(data) => {\r\n        // close on both edit and cancel\r\n        setShowEditModal(false);\r\n        if (data === null) return;\r\n\r\n        const endpoint = selectedTab.toLowerCase();\r\n\r\n        try {\r\n            // convert field names to snake_case before sending to API\r\n            const payload = convertKeysToSnake(data);\r\n\r\n            await fetch(`http://localhost:8000/api/${endpoint}/edit/?${endpoint.slice(0, -1)}_id=${elementToEdit.id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Session-Token': sessionStorage.getItem('token'),\r\n                    'Authorization': `Session ${sessionStorage.getItem('token')}`,\r\n                    'X-CSRFToken': getCsrf(),\r\n                },\r\n                body: JSON.stringify(payload),\r\n                credentials: 'include',\r\n            }).then(response => {\r\n                if (!response.ok) {\r\n                    console.log(\"Failed to edit item\")\r\n                }\r\n\r\n                return response.json();\r\n            }).then(data => {\r\n                console.log(data);\r\n            })\r\n        } catch (Exception) {\r\n\r\n        } finally {\r\n            setSelectedElements([]);\r\n            setElementToEdit(null);\r\n            fetchItems(selectedTab);\r\n        }\r\n    }\r\n\r\n    const handleCreate = async (data) => {\r\n        // close on both create and cancel\r\n        setOpenCreateModal(false);\r\n\r\n        // cancel action (CreateNewElement calls onCreate(null) on cancel)\r\n        if (data === null) return;\r\n        const endpoint = selectedTab.toLowerCase();\r\n        try {\r\n            // ensure we have an object to convert\r\n            const safeData = data || {};\r\n            // convert field names to snake_case before sending to API\r\n            const payload = convertKeysToSnake(safeData);\r\n\r\n            console.log('Creating', endpoint, 'payload:', payload);\r\n\r\n            await fetch(\"http://localhost:8000/api/\" + endpoint + \"/create-new/\", {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Session-Token': sessionStorage.getItem('token'),\r\n                    'Authorization': `Session ${sessionStorage.getItem('token')}`,\r\n                    'X-CSRFToken': getCsrf(),\r\n                },\r\n                body: JSON.stringify(payload),\r\n                credentials: 'include',\r\n            }).then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error(\"Failed to create item\");\r\n                }\r\n\r\n                return response.json();\r\n            }).then(data => {\r\n                console.log(data);\r\n            })\r\n\r\n            await fetchItems(selectedTab);\r\n        } catch (error) {\r\n            console.error(\"Error creating item: \", error);\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        setFilter(\"\");\r\n       const storedUsername = username || sessionStorage.getItem('username');\r\n       if (storedUsername) {\r\n           setUsername(storedUsername);\r\n       }\r\n\r\n       fetchItems(selectedTab);\r\n\r\n       const loader = setTimeout(() => {\r\n           setLoading(false);\r\n       }, 800);\r\n\r\n       return () => {\r\n           clearTimeout(loader);\r\n                \r\n       }\r\n    }, [username, selectedTab, setUsername])\r\n\r\n    // for account modal\r\n    useEffect(() => {\r\n        \r\n        function handleClickOutside(e) {\r\n           if (accountModalRef.current &&\r\n               !accountModalRef.current.contains(e.target)\r\n           ) {\r\n               setOpenAccountModal(false);\r\n           }\r\n        }\r\n\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return () => document.removeEventListener('mousedown', handleClickOutside);\r\n    })\r\n\r\n    const handleTabSelect = (tab) => {\r\n        setElements([])\r\n        setSelectedElements([]);\r\n        setSelectedTab(tab);\r\n        setSearchQuery(\"\");\r\n\r\n        // fetch new items for the selected tab\r\n        console.log(\"Switching to tab:\", tab)\r\n        fetchItems(tab);\r\n    }\r\n\r\n    // fetch customer names to use as options for Payments.payer select\r\n    const fetchCustomerOptions = async () => {\r\n        try {\r\n            const res = await fetch('http://localhost:8000/api/customers/list-all/', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Session-Token': sessionStorage.getItem('token'),\r\n                    'Authorization': `Session ${sessionStorage.getItem('token')}`\r\n                },\r\n                credentials: 'include',\r\n            });\r\n            if (!res.ok) throw new Error('Failed to fetch customers');\r\n            const data = await res.json();\r\n\r\n            // normalize keys (reuse normalizeKey logic)\r\n            const normalizeKey = (s) => s.replace(/_([a-z])/g, (_, c) => c.toUpperCase());\r\n            const normalizeObject = (obj) => {\r\n                if (obj === null || obj === undefined) return obj;\r\n                if (Array.isArray(obj)) return obj.map(normalizeObject);\r\n                if (typeof obj !== 'object') return obj;\r\n                const res = {};\r\n                Object.keys(obj).forEach(k => {\r\n                    const newKey = normalizeKey(k);\r\n                    res[newKey] = normalizeObject(obj[k]);\r\n                });\r\n                return res;\r\n            }\r\n\r\n            const normalized = Array.isArray(data) ? data.map(normalizeObject) : [];\r\n            const opts = normalized.map(c => ({ value: c.id, label: c.name || c.fullName || (`#${String(c.id).padStart(3, '0')}`) }));\r\n            setCustomerOptions(opts);\r\n        } catch (err) {\r\n            console.error('Error fetching customer options', err);\r\n            setCustomerOptions([]);\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n\r\n    const handleSelectRow = (id) => {\r\n        console.log(id);\r\n        setSelectedElements((prev) => \r\n            prev.includes(id) ? prev.filter((ppid) => ppid !== id) : [...prev, id]\r\n        )\r\n    }\r\n    \r\n    const handleSelectAll = (checked) => {\r\n        if (checked) setSelectedElements(elements.map((p) => p.id));\r\n        else setSelectedElements([]);\r\n    }\r\n\r\n    if (loading) return <LoadingPage />;    \r\n\r\n    return (\r\n        <div className=\"min-h-screen screen overflow-auto items-center flex flex-col bg-[#fbfbfb]\">\r\n            <title>Dashboard</title>\r\n            <div className=\"min-w-[90%] min-h-[80%] max-w-[100%] max-h-[100%]\">\r\n                <div className=\"header bg-white w-full self-center flex flex-row justify-between mt-3 rounded-lg p-4 drop-shadow-md\">\r\n                    <div className=\"flex flex-row items-center\">\r\n                        <button onClick={(e) => {setSidebarOpen(!sidebarOpen)}} className=\"p-2 text-[22px] rounded-full hover:bg-black/10 text-zinc-700 mr-4\"><Icon icon=\"fa-solid fa-bars\"></Icon></button>\r\n                        <h1 className=\"text-3xl font-bold text-zinc-700\">Columbarium Dashboard</h1>\r\n                    </div>\r\n                    <div id=\"accountControl\" className=\"flex flex-row items-center\">\r\n                        <button onClick={() => setOpenAccountModal(!openAccountModal)} className=\"p-2 hover:underline text-md text-zinc-700 mr-4\"><Icon icon=\"fa-solid fa-user\" className=\"mr-3\"></Icon>{username !== \"\" ? username : \"User Not Found\"}</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"w-[100%] h-[85%] flex flex-row gap-3\">\r\n                    {/* Sidebar */}\r\n                    { sidebarOpen &&\r\n                    <div className=\"sidebar bg-white w-[20%] h-full self-start flex flex-col mt-3 rounded-lg p-4 drop-shadow-md gap-1\">\r\n\r\n                        {/* Tabs */}\r\n                        <Tab onClick={() => handleTabSelect(\"Customers\")} icon=\"fa-solid fa-users\">Customers</Tab>\r\n\r\n                        <Tab onClick={() => handleTabSelect(\"Payments\")} icon=\"fa-solid fa-credit-card\">Payments</Tab>\r\n\r\n                        <Tab onClick={() => handleTabSelect(\"Contacts\")} icon=\"fa-solid fa-address-book\">Contacts</Tab>\r\n\r\n                        <Tab onClick={() => handleTabSelect(\"Occupants\")} icon=\"fa-solid fa-box-open\">Occupants</Tab>\r\n\r\n                        <Tab onClick={() => handleTabSelect(\"Niches\")} icon=\"fa-solid fa-square-person-confined\">Niches</Tab>\r\n\r\n                        {/* Audit Logs*/}\r\n                        {sessionStorage.getItem(\"permissions\").split(\",\").includes(\"view_audit\") && <Tab onClick={() => handleTabSelect(\"Audit\")} icon=\"fa-solid fa-users\">Audit Logs</Tab>}\r\n\r\n                        {/* User Account Control */}\r\n                        {sessionStorage.getItem(\"permissions\").split(\",\").includes(\"manage_users\") &&\r\n                        <Tab onClick={() => handleTabSelect(\"Users\")} icon=\"fa-solid fa-user-shield\">User Management</Tab>}\r\n\r\n\r\n                        <Tab onClick={() => handleTabSelect(\"Analytics\")} icon=\"fa-solid fa-chart-simple\">Analytics</Tab>\r\n                    </div>}\r\n\r\n                    \r\n                    {/* Main Content */}\r\n                    <div className=\"content transition-all duration-300 ease-out bg-white w-full h-full flex flex-col mt-3 rounded-lg p-4 drop-shadow-md overflow-auto\">\r\n\r\n                        {/* Dynamic Tab Content rendered from a small config to keep things DRY */}\r\n                        {(() => {\r\n                            const tabs = {\r\n                                Customers: {\r\n                                    columns: [\r\n                                        {label: \"\", key: \"_select\" },\r\n                                        { label: \"Customer ID\", key: \"id\", type: 'number' },\r\n                                        { label: \"Full Name\", key: \"name\", type: 'text' },\r\n                                        { label: \"Contact Number\", key: \"contactNumber\", type: 'text' },\r\n                                        { label: \"Email\", key: \"email\", type: 'text' },\r\n                                        { label: \"Address\", key: \"address\", type: 'text' },\r\n                                        { label: \"Deceased's Name\", key: \"deceasedName\", type: 'text' },\r\n                                        { label: \"Date Deceased\", key: \"deceasedDate\", type: 'date' },\r\n                                        { label: \"Relationship to Deceased\", key: \"relationshipToDeceased\", type: 'text' }\r\n                                    ],\r\n                                    toolbarButtons: [\r\n                                        { label: 'Add Customer', icon: 'fa-solid fa-plus', bg: 'bg-blue-500', textClass: 'text-white', onClick: () => setOpenCreateModal(true) },\r\n                                        { label: 'Edit Selected', icon: 'fa-solid fa-pencil', onClick: (e) => { handleEditClick(e) } },\r\n                                        { label: `(${selectedElements.length}) Remove Selected`, icon: 'fa fa-trash', bg: 'bg-red-500', textClass: 'text-white', onClick: (e) => { handleRemoveSelected(e) } },\r\n                                    ],\r\n                                    rowRenderer: (row) => (\r\n                                        <>\r\n                                            <td className=\"p-2\">#{(row.id ?? '').toString().padStart(3, \"0\")}</td>\r\n                                            <td className=\"p-2\">{row.name ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.contactNumber ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.email ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.address ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.deceasedName ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.deceasedDate ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.relationshipToDeceased ?? ''}</td>\r\n                                        </>\r\n                                    )\r\n                                },\r\n                                Payments: {\r\n                                    columns: [\r\n                                        { label: \"\", key: \"_select\" },\r\n                                        { label: \"Payment ID\", key: \"id\", type: 'number' },\r\n                                        { label: \"Customer Name\", key: \"payer\", type: 'text' },\r\n                                        { label: \"Amount Paid\", key: \"amountPaid\", type: 'number' },\r\n                                        { label: \"Amount Due\", key: \"amountDue\", type: 'number' },\r\n                                        { label: \"Remaining Balance\", key: \"remainingBalance\", type: 'number' },\r\n                                        { label: \"Maintenance Fee\", key: \"maintenanceFee\", type: 'number' },\r\n                                        { label: \"Date Paid\", key: \"paymentDate\", type: 'date' },\r\n                                        { label: \"Status\", key: \"status\", type: 'text' }\r\n                                    ],\r\n                                    toolbarButtons: [\r\n                                        { label: 'Add Payment', icon: 'fa-solid fa-plus', bg: 'bg-blue-500', textClass: 'text-white', onClick: async () => { await fetchCustomerOptions(); setOpenCreateModal(true); } },\r\n                                        { label: 'Edit Selected', icon: 'fa-solid fa-pencil', onClick: (e) => { handleEditClick(e) } },\r\n                                        { label: `(${selectedElements.length}) Remove Selected`, icon: 'fa fa-trash', bg: 'bg-red-500', textClass: 'text-white', onClick: (e) => { handleRemoveSelected(e) } },\r\n                                    ],\r\n                                    rowRenderer: (row) => (\r\n                                        <>\r\n                        <td className=\"p-2\">#{(row.id ?? '').toString().padStart(3, \"0\")}</td>\r\n                        <td className=\"p-2\">{(function(){\r\n                            // try to resolve payerId to a customer name from customerOptions\r\n                            const payerId = row.payerId ?? row.payer_id ?? row.payer ?? null;\r\n                            const opt = customerOptions.find(o => String(o.value) === String(payerId));\r\n                            return opt ? opt.label : (row.payer ?? row.payerName ?? '');\r\n                        })()}</td>\r\n                        <td className=\"p-2\">₱ {Number(row.amountPaid ?? row.amountPaid ?? row.amount_paid ?? 0).toLocaleString(\"en-US\", {minimumFractionDigits: 2 })}</td>\r\n                        <td className=\"p-2\">₱ {Number(row.amountDue ?? row.amount_due ?? 0).toLocaleString(\"en-US\", { minimumFractionDigits: 2 })}</td>\r\n                        <td className=\"p-2\">₱ {Number(row.remainingBalance ?? row.remaining_balance ?? 0).toLocaleString(\"en-US\", { minimumFractionDigits: 2 })}</td>\r\n                        <td className=\"p-2\">₱ {Number(row.maintenanceFee ?? row.maintenance_fee ?? 0).toLocaleString(\"en-US\", { minimumFractionDigits: 2 })}</td>\r\n                        <td className=\"p-2\">{row.paymentDate ? new Intl.DateTimeFormat('en-US').format(new Date(row.paymentDate)) : ''}</td>\r\n                        <td className=\"p-2\"><StatusTag status={row.status ?? row.state ?? ''} />\r\n                                    </td>\r\n                                        </>\r\n                                    )\r\n                                },\r\n                                Contacts: {\r\n                                    columns: [\r\n                                        { label: \"\", key: \"_select\" },\r\n                                        { label: \"Contact ID\", key: \"id\", type: 'number' },\r\n                                        { label: \"Family Name\", key: \"familyName\", type: 'text' },\r\n                                        { label: \"Deceased's Name\", key: \"deceasedName\", type: 'text' },\r\n                                        { label: \"Deceased Date\", key: \"deceasedDate\", type: 'date' },\r\n                                        { label: \"Address\", key: \"address\", type: 'text' },\r\n                                        { label: \"Contact Number\", key: \"contactNumber\", type: 'text' }\r\n                                    ],\r\n                                    toolbarButtons: [\r\n                                        { label: 'Add Contact', icon: 'fa-solid fa-plus', bg: 'bg-blue-500', textClass: 'text-white', onClick: () => setOpenCreateModal(true) },\r\n                                        { label: 'Edit Selected', icon: 'fa-solid fa-pencil', onClick: (e) => { handleEditClick(e) } },\r\n                                        { label: `(${selectedElements.length}) Remove Selected`, icon: 'fa fa-trash', textClass:'text-white', bg: 'bg-red-500 text-white', onClick: handleRemoveSelected },\r\n                                    ],\r\n                                    rowRenderer: (row) => (\r\n                                        <>\r\n                                            <td className=\"p-2\">#{(row.id ?? '').toString().padStart(3, \"0\")}</td>\r\n                                            <td className=\"p-2\">{row.familyName ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.deceasedName ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.deceasedDate ? new Intl.DateTimeFormat('en-US').format(new Date(row.deceasedDate)) : ''}</td>\r\n                                            <td className=\"p-2\">{row.address ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.contactNumber ?? ''}</td>\r\n                                            <td className=\"p-2\"><StatusTag status={row.status ?? ''} />\r\n                                    </td>\r\n                                        </>\r\n                                    )\r\n                                },\r\n                                Occupants: {\r\n                                    columns: [\r\n                                        { label: \"\", key: \"_select\" },\r\n                                        { label: \"Occupant ID\", key: \"id\", type: 'number' },\r\n                                        { label: \"Name\", key: \"name\", type: 'text' },\r\n                                        { label: \"Date of Interment\", key: \"intermentDate\", type: 'date' },\r\n                                        { label: \"Niche\", key: \"niche\", type: 'text' }\r\n                                    ],\r\n                                    toolbarButtons: [\r\n                                        { label: 'Add Occupant', icon: 'fa-solid fa-plus', bg: 'bg-blue-500', textClass: 'text-white', onClick: () => setOpenCreateModal(true) },\r\n                                        { label: 'Edit Selected', icon: 'fa-solid fa-pencil', onClick: (e) => { handleEditClick(e) } },\r\n                                        { label: `(${selectedElements.length}) Remove Selected`, icon: 'fa fa-trash', bg: 'bg-red-500', textClass: 'text-white', onClick: handleRemoveSelected },\r\n                                    ],\r\n                                    rowRenderer: (row) => (\r\n                                        <>\r\n                                            <td className=\"p-2\">#{(row.id ?? '').toString().padStart(3, \"0\")}</td>\r\n                                            <td className=\"p-2\">{row.name ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.intermentDate ? new Intl.DateTimeFormat('en-US').format(new Date(row.intermentDate)) : ''}</td>\r\n                                            <td className=\"p-2\">{row.niche ?? ''}</td>\r\n                                        </>\r\n                                    )   \r\n                                },\r\n                                Niches: {\r\n                                    columns: [\r\n                                        { label: \"\", key: \"_select\" },\r\n                                        { label: \"Niche ID\", key: \"id\", type: 'number' },\r\n                                        { label: \"Deceased's Name\", key: \"name\", type: 'text' },\r\n                                        { label: \"Location\", key: \"location\", type: 'text' },\r\n                                        { label: \"Status\", key: \"status\", type: 'text' }\r\n                                    ],\r\n                                    toolbarButtons: [\r\n                                        { label: 'Add Niche', icon: 'fa-solid fa-plus', bg: 'bg-blue-500', textClass: 'text-white', onClick: () => setOpenCreateModal(true) },\r\n                                        { label: 'Edit Selected', icon: 'fa-solid fa-pencil', onClick: handleEditClick },\r\n                                        { label: `(${selectedElements.length}) Remove Selected`, icon: 'fa fa-trash', bg: 'bg-red-500', textClass: 'text-white', onClick: handleRemoveSelected },\r\n                                    ],\r\n                                    rowRenderer: (row) => (\r\n                                        <>\r\n                                            <td className=\"p-2\">#{(row.id ?? '').toString().padStart(3, \"0\")}</td>\r\n                                            <td className=\"p-2\">{row.name ?? row.deceased_name ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.location ?? ''}</td>\r\n                                            <td className=\"p-2\"><StatusTag status={row.status ?? ''} /></td>\r\n                                        </>\r\n                                    )\r\n                                },\r\n                                Audit: {\r\n                                    columns: [\r\n                                        { label: \"User\", key: \"user\", type: 'text' },\r\n                                        { label: \"Role\", key: \"role\", type: 'text' },\r\n                                        { label: \"IP Address\", key: \"ipAddress\", type: 'text' },\r\n                                        { label: \"Object ID\", key: \"objectId\", type: 'text' },\r\n                                        { label: \"Action\", key: \"action\", type: 'text' },\r\n                                        { label: \"Application\", key: \"app\", type: 'text' },\r\n                                        { label: \"URL\", key: \"path\", type: 'text' },\r\n                                        { label: \"Timestamp\", key: \"timestamp\", type: 'date' },\r\n                                    ],\r\n                                    toolbarButtons: [],\r\n                                    rowRenderer: (row) => (\r\n                                        <>\r\n                                            <td className=\"p-2\">{row.user ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.role ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.ipAddress ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.responseData?.ids?.join(', ') ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.action ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.app ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.path ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.timestamp ? new Intl.DateTimeFormat('en-US', {year:'numeric', month:'numeric',day:'numeric', hour:'numeric', minute:'numeric', second:'numeric'}).format(new Date(row.timestamp)) : ''}</td>\r\n                                        </>\r\n                                    )\r\n                                },\r\n                                Users: {\r\n                                    columns: [\r\n                                        { label: \"\", key: \"_select\" },\r\n                                        { label: \"User ID\", key: \"id\", type: 'number' },\r\n                                        { label: \"Username\", key: \"username\", type: 'text' },\r\n                                        { label: \"Role\", key: \"role\", type: 'text' },\r\n                                    ],\r\n                                    toolbarButtons: [\r\n                                        { label: 'Add User', icon: 'fa-solid fa-plus', bg: 'bg-blue-500', textClass: 'text-white', onClick: () => setOpenCreateModal(true) },\r\n                                        { label: 'Edit Selected', icon: 'fa-solid fa-pencil', onClick: handleEditClick },\r\n                                        { label: `(${selectedElements.length}) Remove Selected`, icon: 'fa fa-trash', bg: 'bg-red-500', textClass: 'text-white', onClick: handleRemoveSelected },\r\n                                    ],\r\n                                    rowRenderer: (row) => (\r\n                                        <>\r\n                                            \r\n                                            <td className=\"p-2\">{row.id ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.username ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.role ?? ''}</td>\r\n                                        </>\r\n                                    )\r\n                                }\r\n                                // Add other tabs here\r\n                            }\r\n\r\n                            const cfg = tabs[selectedTab];\r\n                            if (!cfg) return null;\r\n\r\n                            return (\r\n                                <TabContent\r\n                                    title={selectedTab}\r\n                                    searchQuery={searchQuery}\r\n                                    onSearchChange={setSearchQuery}\r\n                                    toolbarButtons={cfg.toolbarButtons}\r\n                                    columns={cfg.columns}\r\n                                    data={elements.length > 0 ? elements : []}\r\n                                    selectedItems={selectedElements}\r\n                                    onSelectAll={handleSelectAll}\r\n                                    onSelectRow={handleSelectRow}\r\n                                    getRowKey={(row) => row.id}\r\n                                    onFilterChange={(value) => setFilter(value)}\r\n                                >\r\n                                    {cfg.rowRenderer}\r\n                                </TabContent>\r\n                            )\r\n                        })()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            { openCreateModal && (() => {\r\n                let fieldsToPass = fieldsByTab[selectedTab];\r\n                if (selectedTab === 'Payments') {\r\n                    // ensure options are available\r\n                    const paymentsFields = (fieldsByTab.Payments || []).map(f => ({ ...f }));\r\n                    // replace payerId field with select options\r\n                    fieldsToPass = paymentsFields.map(f => f.name === 'payerId' ? ({ ...f, type: 'select', options: customerOptions.length ? customerOptions : [{ value: '', label: 'No customers' }] }) : f);\r\n                }\r\n\r\n                return <CreateNewElement tab={selectedTab} onCreate={handleCreate} fields={fieldsToPass} />\r\n            })() }\r\n            { /* EditElement modal can be added here similarly when needed */ }\r\n            { showEditModal && (() => {\r\n                let editFields = fieldsByTab[selectedTab];\r\n                if (selectedTab === 'Payments') {\r\n                    const paymentsFields = (fieldsByTab.Payments || []).map(f => ({ ...f }));\r\n                    editFields = paymentsFields.map(f => f.name === 'payerId' ? ({ ...f, type: 'select', options: customerOptions.length ? customerOptions : [{ value: '', label: 'No customers' }] }) : f);\r\n                }\r\n                return <EditElement tab={selectedTab} elementData={elementToEdit} fields={editFields} onEdit={handleEdit} />\r\n            })()}\r\n\r\n            <div ref={accountModalRef}>\r\n                <AccountModal isOpen={openAccountModal} username={username} role={sessionStorage.getItem(\"role\") || 'Staff'} />\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
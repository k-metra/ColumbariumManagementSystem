{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LenovO\\\\Documents\\\\OtherProjects\\\\ColumbariumManagementSystem\\\\frontend\\\\src\\\\pages\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport Icon from \"../components/icon\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport StatusTag from '../components/dashboard/statusTag';\nimport TabContent from '../components/dashboard/tabContent';\nimport LoadingPage from './loading';\nimport CreateNewElement from \"../components/dashboard/createNewElement\";\nimport EditElement from \"../components/dashboard/editElement\";\nimport AccountModal from \"../components/dashboard/accountModal\";\nimport { fieldsByTab } from \"../config/dashboard/fieldsByTab\";\nimport Tab from '../components/dashboard/tab';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction getCsrf() {\n  const cookies = document.cookie.split(';');\n  for (let i = 0; i < cookies.length; i++) {\n    const cookie = cookies[i].trim();\n    if (cookie.startsWith('csrftoken=')) {\n      return cookie.substring('csrftoken='.length, cookie.length);\n    }\n  }\n}\nexport default function DashboardPage() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const {\n    username,\n    setUsername\n  } = useAuth();\n  const [selectedTab, setSelectedTab] = useState(\"Customers\");\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [openCreateModal, setOpenCreateModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [selectedElements, setSelectedElements] = useState([]);\n  const [elementToEdit, setElementToEdit] = useState(null);\n  const [elements, setElements] = useState([]);\n  const [openAccountModal, setOpenAccountModal] = useState(false);\n  const accountModalRef = useRef(null);\n  const [filter, setFilter] = useState(\"\");\n  async function fetchItems(endpoint) {\n    setElements([]);\n    console.log(endpoint, \" fetching items.\");\n    try {\n      await fetch(`http://localhost:8000/api/${endpoint.toLowerCase()}/list-all/`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Session-Token': sessionStorage.getItem('token'),\n          'Authorization': `Session ${sessionStorage.getItem('token')}`\n        },\n        credentials: 'include'\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch items\");\n        } else {\n          return response.json();\n        }\n      }).then(data => {\n        // normalize server response keys to camelCase for consistent UI usage\n        const normalizeKey = s => s.replace(/_([a-z])/g, (_, c) => c.toUpperCase());\n        const normalizeObject = obj => {\n          if (obj === null || obj === undefined) return obj;\n          if (Array.isArray(obj)) return obj.map(normalizeObject);\n          if (typeof obj !== 'object') return obj;\n          const res = {};\n          Object.keys(obj).forEach(k => {\n            const newKey = normalizeKey(k);\n            const val = obj[k];\n            res[newKey] = normalizeObject(val);\n          });\n          return res;\n        };\n        const normalized = Array.isArray(data) ? data.map(normalizeObject) : data;\n        setElements(normalized);\n        console.log(\"Fetched items (normalized): \", normalized);\n      });\n    } catch (Exception) {\n      console.log(\"Error fetching items: \", Exception);\n    }\n  }\n\n  // convert camelCase keys used in the UI back to snake_case for the API\n  const camelToSnake = s => s.replace(/([A-Z])/g, m => '_' + m.toLowerCase());\n  const convertKeysToSnake = obj => {\n    if (obj === null || obj === undefined) return obj;\n    if (Array.isArray(obj)) return obj.map(convertKeysToSnake);\n    if (obj instanceof Date) return obj.toISOString();\n    if (typeof obj !== 'object') return obj;\n    const res = {};\n    Object.keys(obj).forEach(k => {\n      const newKey = camelToSnake(k);\n      res[newKey] = convertKeysToSnake(obj[k]);\n    });\n    return res;\n  };\n  const handleEditClick = () => {\n    if (selectedElements.length === 1) {\n      setElementToEdit(elements.find(e => e.id === selectedElements[0]));\n      setShowEditModal(true);\n    }\n  };\n  async function handleRemoveSelected(e) {\n    e.preventDefault();\n    if (selectedElements.length === 0) return;\n    const endpoint = selectedTab.toLowerCase();\n    const confirmation = window.confirm(`Are you sure you want to delete ${selectedElements.length} items? This action cannot be undone.`);\n    if (confirmation) {\n      try {\n        await fetch(`http://localhost:8000/api/${endpoint}/delete/`, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json',\n            'Session-Token': sessionStorage.getItem('token'),\n            'Authorization': `Session ${sessionStorage.getItem('token')}`,\n            'X-CSRFToken': getCsrf()\n          },\n          body: JSON.stringify({\n            element_ids: selectedElements\n          }),\n          credentials: 'include'\n        });\n      } catch (Exception) {\n        console.log(\"Error deleting items: \", Exception);\n      } finally {\n        setSelectedElements([]);\n        await fetchItems(selectedTab);\n      }\n    }\n  }\n  const handleEdit = async data => {\n    // close on both edit and cancel\n    setShowEditModal(false);\n    if (data === null) return;\n    const endpoint = selectedTab.toLowerCase();\n    try {\n      // convert field names to snake_case before sending to API\n      const payload = convertKeysToSnake(data);\n      await fetch(`http://localhost:8000/api/${endpoint}/edit/?${endpoint.slice(0, -1)}_id=${elementToEdit.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Session-Token': sessionStorage.getItem('token'),\n          'Authorization': `Session ${sessionStorage.getItem('token')}`,\n          'X-CSRFToken': getCsrf()\n        },\n        body: JSON.stringify(payload),\n        credentials: 'include'\n      }).then(response => {\n        if (!response.ok) {\n          console.log(\"Failed to edit item\");\n        }\n        return response.json();\n      }).then(data => {\n        console.log(data);\n      });\n    } catch (Exception) {} finally {\n      setSelectedElements([]);\n      setElementToEdit(null);\n      fetchItems(selectedTab);\n    }\n  };\n  const handleCreate = async data => {\n    // close on both create and cancel\n    setOpenCreateModal(false);\n\n    // cancel action (CreateNewElement calls onCreate(null) on cancel)\n    if (data === null) return;\n    const endpoint = selectedTab.toLowerCase();\n    try {\n      // convert field names to snake_case before sending to API\n      const payload = convertKeysToSnake(data);\n      await fetch(\"http://localhost:8000/api/\" + endpoint + \"/create-new/\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Session-Token': sessionStorage.getItem('token'),\n          'Authorization': `Session ${sessionStorage.getItem('token')}`,\n          'X-CSRFToken': getCsrf()\n        },\n        body: JSON.stringify(payload),\n        credentials: 'include'\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(\"Failed to create item\");\n        }\n        return response.json();\n      }).then(data => {\n        console.log(data);\n      });\n      await fetchItems(selectedTab);\n    } catch (error) {\n      console.error(\"Error creating item: \", error);\n    }\n  };\n  useEffect(() => {\n    setFilter(\"\");\n    const storedUsername = username || sessionStorage.getItem('username');\n    if (storedUsername) {\n      setUsername(storedUsername);\n    }\n    fetchItems(selectedTab);\n    const loader = setTimeout(() => {\n      setLoading(false);\n    }, 800);\n    return () => {\n      clearTimeout(loader);\n    };\n  }, [username, selectedTab, setUsername]);\n\n  // for account modal\n  useEffect(() => {\n    function handleClickOutside(e) {\n      if (accountModalRef.current && !accountModalRef.current.contains(e.target)) {\n        setOpenAccountModal(false);\n      }\n    }\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  });\n  const handleTabSelect = tab => {\n    setElements([]);\n    setSelectedElements([]);\n    setSelectedTab(tab);\n    setSearchQuery(\"\");\n\n    // fetch new items for the selected tab\n    console.log(\"Switching to tab:\", tab);\n    fetchItems(tab);\n  };\n  const handleSelectRow = id => {\n    console.log(id);\n    setSelectedElements(prev => prev.includes(id) ? prev.filter(ppid => ppid !== id) : [...prev, id]);\n  };\n  const handleSelectAll = checked => {\n    if (checked) setSelectedElements(elements.map(p => p.id));else setSelectedElements([]);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen screen overflow-auto items-center flex flex-col bg-[#fbfbfb]\",\n    children: [/*#__PURE__*/_jsxDEV(\"title\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-w-[90%] min-h-[80%] max-w-[100%] max-h-[100%]\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header bg-white w-full self-center flex flex-row justify-between mt-3 rounded-lg p-4 drop-shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-row items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              setSidebarOpen(!sidebarOpen);\n            },\n            className: \"p-2 text-[22px] rounded-full hover:bg-black/10 text-zinc-700 mr-4\",\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              icon: \"fa-solid fa-bars\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 159\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-3xl font-bold text-zinc-700\",\n            children: \"Columbarium Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"accountControl\",\n          className: \"flex flex-row items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setOpenAccountModal(!openAccountModal),\n            className: \"p-2 hover:underline text-md text-zinc-700 mr-4\",\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              icon: \"fa-solid fa-user\",\n              className: \"mr-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 147\n            }, this), username !== \"\" ? username : \"User Not Found\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-[100%] h-[85%] flex flex-row gap-3\",\n        children: [sidebarOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar bg-white w-[20%] h-full self-start flex flex-col mt-3 rounded-lg p-4 drop-shadow-md gap-1\",\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            onClick: () => handleTabSelect(\"Customers\"),\n            icon: \"fa-solid fa-users\",\n            children: \"Customers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            onClick: () => handleTabSelect(\"Payments\"),\n            icon: \"fa-solid fa-credit-card\",\n            children: \"Payments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            onClick: () => handleTabSelect(\"Contacts\"),\n            icon: \"fa-solid fa-address-book\",\n            children: \"Contacts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            onClick: () => handleTabSelect(\"Occupants\"),\n            icon: \"fa-solid fa-box-open\",\n            children: \"Occupants\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            onClick: () => handleTabSelect(\"Niches\"),\n            icon: \"fa-solid fa-square-person-confined\",\n            children: \"Niches\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 25\n          }, this), sessionStorage.getItem(\"permissions\").split(\",\").includes(\"view_audit\") && /*#__PURE__*/_jsxDEV(Tab, {\n            onClick: () => handleTabSelect(\"Audit\"),\n            icon: \"fa-solid fa-users\",\n            children: \"Audit Logs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 101\n          }, this), sessionStorage.getItem(\"permissions\").split(\",\").includes(\"manage_users\") && /*#__PURE__*/_jsxDEV(Tab, {\n            onClick: () => handleTabSelect(\"Users\"),\n            icon: \"fa-solid fa-user-shield\",\n            children: \"User Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            onClick: () => handleTabSelect(\"Analytics\"),\n            icon: \"fa-solid fa-chart-simple\",\n            children: \"Analytics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content transition-all duration-300 ease-out bg-white w-full h-full flex flex-col mt-3 rounded-lg p-4 drop-shadow-md overflow-auto\",\n          children: (() => {\n            const tabs = {\n              Customers: {\n                columns: [{\n                  label: \"\",\n                  key: \"_select\"\n                }, {\n                  label: \"Customer ID\",\n                  key: \"id\",\n                  type: 'number'\n                }, {\n                  label: \"Full Name\",\n                  key: \"name\",\n                  type: 'text'\n                }, {\n                  label: \"Contact Number\",\n                  key: \"contactNumber\",\n                  type: 'text'\n                }, {\n                  label: \"Email\",\n                  key: \"email\",\n                  type: 'text'\n                }, {\n                  label: \"Address\",\n                  key: \"address\",\n                  type: 'text'\n                }, {\n                  label: \"Deceased's Name\",\n                  key: \"deceasedName\",\n                  type: 'text'\n                }, {\n                  label: \"Date Deceased\",\n                  key: \"deceasedDate\",\n                  type: 'date'\n                }, {\n                  label: \"Relationship to Deceased\",\n                  key: \"relationshipToDeceased\",\n                  type: 'text'\n                }],\n                toolbarButtons: [{\n                  label: 'Add Customer',\n                  icon: 'fa-solid fa-plus',\n                  bg: 'bg-blue-500',\n                  textClass: 'text-white',\n                  onClick: () => setOpenCreateModal(true)\n                }, {\n                  label: 'Edit Selected',\n                  icon: 'fa-solid fa-pencil',\n                  onClick: e => {\n                    handleEditClick(e);\n                  }\n                }, {\n                  label: `(${selectedElements.length}) Remove Selected`,\n                  icon: 'fa fa-trash',\n                  bg: 'bg-red-500',\n                  textClass: 'text-white',\n                  onClick: e => {\n                    handleRemoveSelected(e);\n                  }\n                }],\n                rowRenderer: row => {\n                  var _row$id, _row$name, _row$contactNumber, _row$email, _row$address, _row$deceasedName, _row$deceasedDate, _row$relationshipToDe;\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: [\"#\", ((_row$id = row.id) !== null && _row$id !== void 0 ? _row$id : '').toString().padStart(3, \"0\")]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 352,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$name = row.name) !== null && _row$name !== void 0 ? _row$name : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 353,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$contactNumber = row.contactNumber) !== null && _row$contactNumber !== void 0 ? _row$contactNumber : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 354,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$email = row.email) !== null && _row$email !== void 0 ? _row$email : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 355,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$address = row.address) !== null && _row$address !== void 0 ? _row$address : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 356,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$deceasedName = row.deceasedName) !== null && _row$deceasedName !== void 0 ? _row$deceasedName : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 357,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$deceasedDate = row.deceasedDate) !== null && _row$deceasedDate !== void 0 ? _row$deceasedDate : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 358,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$relationshipToDe = row.relationshipToDeceased) !== null && _row$relationshipToDe !== void 0 ? _row$relationshipToDe : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 359,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true);\n                }\n              },\n              Payments: {\n                columns: [{\n                  label: \"\",\n                  key: \"_select\"\n                }, {\n                  label: \"Payment ID\",\n                  key: \"id\",\n                  type: 'number'\n                }, {\n                  label: \"Customer Name\",\n                  key: \"payer\",\n                  type: 'text'\n                }, {\n                  label: \"Amount Paid\",\n                  key: \"amountPaid\",\n                  type: 'number'\n                }, {\n                  label: \"Amount Due\",\n                  key: \"amountDue\",\n                  type: 'number'\n                }, {\n                  label: \"Remaining Balance\",\n                  key: \"remainingBalance\",\n                  type: 'number'\n                }, {\n                  label: \"Maintenance Fee\",\n                  key: \"maintenanceFee\",\n                  type: 'number'\n                }, {\n                  label: \"Date Paid\",\n                  key: \"paymentDate\",\n                  type: 'date'\n                }, {\n                  label: \"Status\",\n                  key: \"status\",\n                  type: 'text'\n                }],\n                toolbarButtons: [{\n                  label: 'Add Payment',\n                  icon: 'fa-solid fa-plus',\n                  bg: 'bg-blue-500',\n                  textClass: 'text-white',\n                  onClick: () => setOpenCreateModal(true)\n                }, {\n                  label: 'Edit Selected',\n                  icon: 'fa-solid fa-pencil',\n                  onClick: e => {\n                    handleEditClick(e);\n                  }\n                }, {\n                  label: `(${selectedElements.length}) Remove Selected`,\n                  icon: 'fa fa-trash',\n                  bg: 'bg-red-500',\n                  textClass: 'text-white',\n                  onClick: e => {\n                    handleRemoveSelected(e);\n                  }\n                }],\n                rowRenderer: row => {\n                  var _row$id2, _ref, _row$payer, _ref2, _ref3, _row$amountPaid, _ref4, _row$amountDue, _ref5, _row$remainingBalance, _ref6, _row$maintenanceFee, _ref7, _row$status;\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: [\"#\", ((_row$id2 = row.id) !== null && _row$id2 !== void 0 ? _row$id2 : '').toString().padStart(3, \"0\")]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 382,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_ref = (_row$payer = row.payer) !== null && _row$payer !== void 0 ? _row$payer : row.payerName) !== null && _ref !== void 0 ? _ref : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 383,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: [\"\\u20B1 \", Number((_ref2 = (_ref3 = (_row$amountPaid = row.amountPaid) !== null && _row$amountPaid !== void 0 ? _row$amountPaid : row.amountPaid) !== null && _ref3 !== void 0 ? _ref3 : row.amount_paid) !== null && _ref2 !== void 0 ? _ref2 : 0).toLocaleString(\"en-US\", {\n                        minimumFractionDigits: 2\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 384,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: [\"\\u20B1 \", Number((_ref4 = (_row$amountDue = row.amountDue) !== null && _row$amountDue !== void 0 ? _row$amountDue : row.amount_due) !== null && _ref4 !== void 0 ? _ref4 : 0).toLocaleString(\"en-US\", {\n                        minimumFractionDigits: 2\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 385,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: [\"\\u20B1 \", Number((_ref5 = (_row$remainingBalance = row.remainingBalance) !== null && _row$remainingBalance !== void 0 ? _row$remainingBalance : row.remaining_balance) !== null && _ref5 !== void 0 ? _ref5 : 0).toLocaleString(\"en-US\", {\n                        minimumFractionDigits: 2\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 386,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: [\"\\u20B1 \", Number((_ref6 = (_row$maintenanceFee = row.maintenanceFee) !== null && _row$maintenanceFee !== void 0 ? _row$maintenanceFee : row.maintenance_fee) !== null && _ref6 !== void 0 ? _ref6 : 0).toLocaleString(\"en-US\", {\n                        minimumFractionDigits: 2\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 387,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: row.paymentDate ? new Intl.DateTimeFormat('en-US').format(new Date(row.paymentDate)) : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 388,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: /*#__PURE__*/_jsxDEV(StatusTag, {\n                        status: (_ref7 = (_row$status = row.status) !== null && _row$status !== void 0 ? _row$status : row.state) !== null && _ref7 !== void 0 ? _ref7 : ''\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 389,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 389,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true);\n                }\n              },\n              Contacts: {\n                columns: [{\n                  label: \"\",\n                  key: \"_select\"\n                }, {\n                  label: \"Contact ID\",\n                  key: \"id\",\n                  type: 'number'\n                }, {\n                  label: \"Family Name\",\n                  key: \"familyName\",\n                  type: 'text'\n                }, {\n                  label: \"Deceased's Name\",\n                  key: \"deceasedName\",\n                  type: 'text'\n                }, {\n                  label: \"Deceased Date\",\n                  key: \"deceasedDate\",\n                  type: 'date'\n                }, {\n                  label: \"Address\",\n                  key: \"address\",\n                  type: 'text'\n                }, {\n                  label: \"Contact Number\",\n                  key: \"contactNumber\",\n                  type: 'text'\n                }],\n                toolbarButtons: [{\n                  label: 'Add Contact',\n                  icon: 'fa-solid fa-plus',\n                  bg: 'bg-blue-500',\n                  textClass: 'text-white',\n                  onClick: () => setOpenCreateModal(true)\n                }, {\n                  label: 'Edit Selected',\n                  icon: 'fa-solid fa-pencil',\n                  onClick: e => {\n                    handleEditClick(e);\n                  }\n                }, {\n                  label: `(${selectedElements.length}) Remove Selected`,\n                  icon: 'fa fa-trash',\n                  textClass: 'text-white',\n                  bg: 'bg-red-500 text-white',\n                  onClick: handleRemoveSelected\n                }],\n                rowRenderer: row => {\n                  var _row$id3, _row$familyName, _row$deceasedName2, _row$address2, _row$contactNumber2, _row$status2;\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: [\"#\", ((_row$id3 = row.id) !== null && _row$id3 !== void 0 ? _row$id3 : '').toString().padStart(3, \"0\")]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 411,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$familyName = row.familyName) !== null && _row$familyName !== void 0 ? _row$familyName : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 412,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$deceasedName2 = row.deceasedName) !== null && _row$deceasedName2 !== void 0 ? _row$deceasedName2 : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 413,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: row.deceasedDate ? new Intl.DateTimeFormat('en-US').format(new Date(row.deceasedDate)) : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 414,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$address2 = row.address) !== null && _row$address2 !== void 0 ? _row$address2 : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 415,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$contactNumber2 = row.contactNumber) !== null && _row$contactNumber2 !== void 0 ? _row$contactNumber2 : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 416,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: /*#__PURE__*/_jsxDEV(StatusTag, {\n                        status: (_row$status2 = row.status) !== null && _row$status2 !== void 0 ? _row$status2 : ''\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 417,\n                        columnNumber: 65\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 417,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true);\n                }\n              },\n              Occupants: {\n                columns: [{\n                  label: \"\",\n                  key: \"_select\"\n                }, {\n                  label: \"Occupant ID\",\n                  key: \"id\",\n                  type: 'number'\n                }, {\n                  label: \"Name\",\n                  key: \"name\",\n                  type: 'text'\n                }, {\n                  label: \"Date of Interment\",\n                  key: \"intermentDate\",\n                  type: 'date'\n                }, {\n                  label: \"Niche\",\n                  key: \"niche\",\n                  type: 'text'\n                }],\n                toolbarButtons: [{\n                  label: 'Add Occupant',\n                  icon: 'fa-solid fa-plus',\n                  bg: 'bg-blue-500',\n                  textClass: 'text-white',\n                  onClick: () => setOpenCreateModal(true)\n                }, {\n                  label: 'Edit Selected',\n                  icon: 'fa-solid fa-pencil',\n                  onClick: e => {\n                    handleEditClick(e);\n                  }\n                }, {\n                  label: `(${selectedElements.length}) Remove Selected`,\n                  icon: 'fa fa-trash',\n                  bg: 'bg-red-500',\n                  textClass: 'text-white',\n                  onClick: handleRemoveSelected\n                }],\n                rowRenderer: row => {\n                  var _row$id4, _row$name2, _row$niche;\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: [\"#\", ((_row$id4 = row.id) !== null && _row$id4 !== void 0 ? _row$id4 : '').toString().padStart(3, \"0\")]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 437,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$name2 = row.name) !== null && _row$name2 !== void 0 ? _row$name2 : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 438,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: row.intermentDate ? new Intl.DateTimeFormat('en-US').format(new Date(row.intermentDate)) : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 439,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$niche = row.niche) !== null && _row$niche !== void 0 ? _row$niche : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 440,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true);\n                }\n              },\n              Niches: {\n                columns: [{\n                  label: \"\",\n                  key: \"_select\"\n                }, {\n                  label: \"Niche ID\",\n                  key: \"id\",\n                  type: 'number'\n                }, {\n                  label: \"Deceased's Name\",\n                  key: \"name\",\n                  type: 'text'\n                }, {\n                  label: \"Location\",\n                  key: \"location\",\n                  type: 'text'\n                }, {\n                  label: \"Status\",\n                  key: \"status\",\n                  type: 'text'\n                }],\n                toolbarButtons: [{\n                  label: 'Add Niche',\n                  icon: 'fa-solid fa-plus',\n                  bg: 'bg-blue-500',\n                  textClass: 'text-white',\n                  onClick: () => setOpenCreateModal(true)\n                }, {\n                  label: 'Edit Selected',\n                  icon: 'fa-solid fa-pencil',\n                  onClick: handleEditClick\n                }, {\n                  label: `(${selectedElements.length}) Remove Selected`,\n                  icon: 'fa fa-trash',\n                  bg: 'bg-red-500',\n                  textClass: 'text-white',\n                  onClick: handleRemoveSelected\n                }],\n                rowRenderer: row => {\n                  var _row$id5, _ref8, _row$name3, _row$location, _row$status3;\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: [\"#\", ((_row$id5 = row.id) !== null && _row$id5 !== void 0 ? _row$id5 : '').toString().padStart(3, \"0\")]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 459,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_ref8 = (_row$name3 = row.name) !== null && _row$name3 !== void 0 ? _row$name3 : row.deceased_name) !== null && _ref8 !== void 0 ? _ref8 : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 460,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$location = row.location) !== null && _row$location !== void 0 ? _row$location : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 461,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: /*#__PURE__*/_jsxDEV(StatusTag, {\n                        status: (_row$status3 = row.status) !== null && _row$status3 !== void 0 ? _row$status3 : ''\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 462,\n                        columnNumber: 65\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 462,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true);\n                }\n              },\n              Audit: {\n                columns: [{\n                  label: \"User\",\n                  key: \"user\",\n                  type: 'text'\n                }, {\n                  label: \"Role\",\n                  key: \"role\",\n                  type: 'text'\n                }, {\n                  label: \"IP Address\",\n                  key: \"ipAddress\",\n                  type: 'text'\n                }, {\n                  label: \"Object ID\",\n                  key: \"objectId\",\n                  type: 'text'\n                }, {\n                  label: \"Action\",\n                  key: \"action\",\n                  type: 'text'\n                }, {\n                  label: \"Application\",\n                  key: \"app\",\n                  type: 'text'\n                }, {\n                  label: \"URL\",\n                  key: \"path\",\n                  type: 'text'\n                }, {\n                  label: \"Timestamp\",\n                  key: \"timestamp\",\n                  type: 'date'\n                }],\n                toolbarButtons: [],\n                rowRenderer: row => {\n                  var _row$user, _row$role, _row$ipAddress, _row$responseData$ids, _row$responseData, _row$responseData$ids2, _row$action, _row$app, _row$path;\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$user = row.user) !== null && _row$user !== void 0 ? _row$user : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 480,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$role = row.role) !== null && _row$role !== void 0 ? _row$role : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 481,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$ipAddress = row.ipAddress) !== null && _row$ipAddress !== void 0 ? _row$ipAddress : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 482,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$responseData$ids = (_row$responseData = row.responseData) === null || _row$responseData === void 0 ? void 0 : (_row$responseData$ids2 = _row$responseData.ids) === null || _row$responseData$ids2 === void 0 ? void 0 : _row$responseData$ids2.join(', ')) !== null && _row$responseData$ids !== void 0 ? _row$responseData$ids : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 483,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$action = row.action) !== null && _row$action !== void 0 ? _row$action : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 484,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$app = row.app) !== null && _row$app !== void 0 ? _row$app : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 485,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$path = row.path) !== null && _row$path !== void 0 ? _row$path : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 486,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: row.timestamp ? new Intl.DateTimeFormat('en-US', {\n                        year: 'numeric',\n                        month: 'numeric',\n                        day: 'numeric',\n                        hour: 'numeric',\n                        minute: 'numeric',\n                        second: 'numeric'\n                      }).format(new Date(row.timestamp)) : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 487,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true);\n                }\n              },\n              Users: {\n                columns: [{\n                  label: \"\",\n                  key: \"_select\"\n                }, {\n                  label: \"User ID\",\n                  key: \"id\",\n                  type: 'number'\n                }, {\n                  label: \"Username\",\n                  key: \"username\",\n                  type: 'text'\n                }, {\n                  label: \"Role\",\n                  key: \"role\",\n                  type: 'text'\n                }],\n                toolbarButtons: [{\n                  label: 'Add User',\n                  icon: 'fa-solid fa-plus',\n                  bg: 'bg-blue-500',\n                  textClass: 'text-white',\n                  onClick: () => setOpenCreateModal(true)\n                }, {\n                  label: 'Edit Selected',\n                  icon: 'fa-solid fa-pencil',\n                  onClick: handleEditClick\n                }, {\n                  label: `(${selectedElements.length}) Remove Selected`,\n                  icon: 'fa fa-trash',\n                  bg: 'bg-red-500',\n                  textClass: 'text-white',\n                  onClick: handleRemoveSelected\n                }],\n                rowRenderer: row => {\n                  var _row$id6, _row$username, _row$role2;\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$id6 = row.id) !== null && _row$id6 !== void 0 ? _row$id6 : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 506,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$username = row.username) !== null && _row$username !== void 0 ? _row$username : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 507,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"p-2\",\n                      children: (_row$role2 = row.role) !== null && _row$role2 !== void 0 ? _row$role2 : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 508,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true);\n                }\n              }\n              // Add other tabs here\n            };\n            const cfg = tabs[selectedTab];\n            if (!cfg) return null;\n            return /*#__PURE__*/_jsxDEV(TabContent, {\n              title: selectedTab,\n              searchQuery: searchQuery,\n              onSearchChange: setSearchQuery,\n              toolbarButtons: cfg.toolbarButtons,\n              columns: cfg.columns,\n              data: elements.length > 0 ? elements : [],\n              selectedItems: selectedElements,\n              onSelectAll: handleSelectAll,\n              onSelectRow: handleSelectRow,\n              getRowKey: row => row.id,\n              onFilterChange: value => setFilter(value),\n              children: cfg.rowRenderer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 33\n            }, this);\n          })()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }, this), openCreateModal && /*#__PURE__*/_jsxDEV(CreateNewElement, {\n      tab: selectedTab,\n      onCreate: handleCreate,\n      fields: fieldsByTab[selectedTab]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 34\n    }, this), showEditModal && /*#__PURE__*/_jsxDEV(EditElement, {\n      tab: selectedTab,\n      elementData: elementToEdit,\n      fields: fieldsByTab[selectedTab],\n      onEdit: handleEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: accountModalRef,\n      children: /*#__PURE__*/_jsxDEV(AccountModal, {\n        isOpen: openAccountModal,\n        username: username,\n        role: sessionStorage.getItem(\"role\") || 'Staff'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 9\n  }, this);\n}\n_s(DashboardPage, \"NWITMPiw2iBoPiwgi2I+c43FsfA=\", false, function () {\n  return [useAuth];\n});\n_c = DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["Icon","useState","useEffect","useRef","useAuth","StatusTag","TabContent","LoadingPage","CreateNewElement","EditElement","AccountModal","fieldsByTab","Tab","jsxDEV","_jsxDEV","Fragment","_Fragment","getCsrf","cookies","document","cookie","split","i","length","trim","startsWith","substring","DashboardPage","_s","loading","setLoading","username","setUsername","selectedTab","setSelectedTab","sidebarOpen","setSidebarOpen","searchQuery","setSearchQuery","openCreateModal","setOpenCreateModal","showEditModal","setShowEditModal","selectedElements","setSelectedElements","elementToEdit","setElementToEdit","elements","setElements","openAccountModal","setOpenAccountModal","accountModalRef","filter","setFilter","fetchItems","endpoint","console","log","fetch","toLowerCase","method","headers","sessionStorage","getItem","credentials","then","response","ok","Error","json","data","normalizeKey","s","replace","_","c","toUpperCase","normalizeObject","obj","undefined","Array","isArray","map","res","Object","keys","forEach","k","newKey","val","normalized","Exception","camelToSnake","m","convertKeysToSnake","Date","toISOString","handleEditClick","find","e","id","handleRemoveSelected","preventDefault","confirmation","window","confirm","body","JSON","stringify","element_ids","handleEdit","payload","slice","handleCreate","error","storedUsername","loader","setTimeout","clearTimeout","handleClickOutside","current","contains","target","addEventListener","removeEventListener","handleTabSelect","tab","handleSelectRow","prev","includes","ppid","handleSelectAll","checked","p","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","icon","tabs","Customers","columns","label","key","type","toolbarButtons","bg","textClass","rowRenderer","row","_row$id","_row$name","_row$contactNumber","_row$email","_row$address","_row$deceasedName","_row$deceasedDate","_row$relationshipToDe","toString","padStart","name","contactNumber","email","address","deceasedName","deceasedDate","relationshipToDeceased","Payments","_row$id2","_ref","_row$payer","_ref2","_ref3","_row$amountPaid","_ref4","_row$amountDue","_ref5","_row$remainingBalance","_ref6","_row$maintenanceFee","_ref7","_row$status","payer","payerName","Number","amountPaid","amount_paid","toLocaleString","minimumFractionDigits","amountDue","amount_due","remainingBalance","remaining_balance","maintenanceFee","maintenance_fee","paymentDate","Intl","DateTimeFormat","format","status","state","Contacts","_row$id3","_row$familyName","_row$deceasedName2","_row$address2","_row$contactNumber2","_row$status2","familyName","Occupants","_row$id4","_row$name2","_row$niche","intermentDate","niche","Niches","_row$id5","_ref8","_row$name3","_row$location","_row$status3","deceased_name","location","Audit","_row$user","_row$role","_row$ipAddress","_row$responseData$ids","_row$responseData","_row$responseData$ids2","_row$action","_row$app","_row$path","user","role","ipAddress","responseData","ids","join","action","app","path","timestamp","year","month","day","hour","minute","second","Users","_row$id6","_row$username","_row$role2","cfg","title","onSearchChange","selectedItems","onSelectAll","onSelectRow","getRowKey","onFilterChange","value","onCreate","fields","elementData","onEdit","ref","isOpen","_c","$RefreshReg$"],"sources":["C:/Users/LenovO/Documents/OtherProjects/ColumbariumManagementSystem/frontend/src/pages/dashboard.js"],"sourcesContent":["import Icon from \"../components/icon\";\r\n\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport StatusTag from '../components/dashboard/statusTag';\r\nimport TabContent from '../components/dashboard/tabContent';\r\n\r\nimport LoadingPage from './loading';\r\nimport CreateNewElement from \"../components/dashboard/createNewElement\";\r\nimport EditElement from \"../components/dashboard/editElement\";\r\nimport AccountModal from \"../components/dashboard/accountModal\";\r\n\r\nimport { fieldsByTab } from \"../config/dashboard/fieldsByTab\";\r\n\r\nimport Tab from '../components/dashboard/tab';\r\n\r\nfunction getCsrf() {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n        const cookie = cookies[i].trim();\r\n        if (cookie.startsWith('csrftoken=')) {\r\n            return cookie.substring('csrftoken='.length, cookie.length);\r\n        }\r\n    }\r\n}\r\n\r\nexport default function DashboardPage() {\r\n    const [loading, setLoading] = useState(true);\r\n    const { username, setUsername } = useAuth();\r\n    const [selectedTab, setSelectedTab] = useState(\"Customers\");\r\n    const [sidebarOpen, setSidebarOpen] = useState(true);\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n    const [openCreateModal, setOpenCreateModal] = useState(false);\r\n    const [showEditModal, setShowEditModal] = useState(false);\r\n\r\n    const [selectedElements, setSelectedElements] = useState([]);\r\n    const [elementToEdit, setElementToEdit] = useState(null);\r\n    const [elements, setElements] = useState([])\r\n\r\n    const [openAccountModal, setOpenAccountModal] = useState(false);\r\n    const accountModalRef = useRef(null);\r\n    const [filter, setFilter] = useState(\"\");\r\n    \r\n    async function fetchItems(endpoint) {\r\n        setElements([]);\r\n        console.log(endpoint, \" fetching items.\");\r\n        try {\r\n            await fetch (`http://localhost:8000/api/${endpoint.toLowerCase()}/list-all/`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Session-Token': sessionStorage.getItem('token'),\r\n                    'Authorization': `Session ${sessionStorage.getItem('token')}`\r\n                },\r\n                credentials: 'include',\r\n            }).then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error(\"Failed to fetch items\");\r\n                } else {\r\n                    return response.json();\r\n                }\r\n            }).then(data => {\r\n                // normalize server response keys to camelCase for consistent UI usage\r\n                const normalizeKey = (s) => s.replace(/_([a-z])/g, (_, c) => c.toUpperCase());\r\n\r\n                const normalizeObject = (obj) => {\r\n                    if (obj === null || obj === undefined) return obj;\r\n                    if (Array.isArray(obj)) return obj.map(normalizeObject);\r\n                    if (typeof obj !== 'object') return obj;\r\n                    const res = {};\r\n                    Object.keys(obj).forEach(k => {\r\n                        const newKey = normalizeKey(k);\r\n                        const val = obj[k];\r\n                        res[newKey] = normalizeObject(val);\r\n                    });\r\n                    return res;\r\n                }\r\n\r\n                const normalized = Array.isArray(data) ? data.map(normalizeObject) : data;\r\n                setElements(normalized);\r\n                console.log(\"Fetched items (normalized): \", normalized);\r\n            })\r\n        } catch (Exception) {\r\n            console.log(\"Error fetching items: \", Exception);\r\n        }\r\n    }\r\n\r\n    // convert camelCase keys used in the UI back to snake_case for the API\r\n    const camelToSnake = (s) => s.replace(/([A-Z])/g, (m) => '_' + m.toLowerCase());\r\n\r\n    const convertKeysToSnake = (obj) => {\r\n        if (obj === null || obj === undefined) return obj;\r\n        if (Array.isArray(obj)) return obj.map(convertKeysToSnake);\r\n        if (obj instanceof Date) return obj.toISOString();\r\n        if (typeof obj !== 'object') return obj;\r\n\r\n        const res = {};\r\n        Object.keys(obj).forEach((k) => {\r\n            const newKey = camelToSnake(k);\r\n            res[newKey] = convertKeysToSnake(obj[k]);\r\n        });\r\n        return res;\r\n    }\r\n\r\n    const handleEditClick = () => {\r\n         if (selectedElements.length === 1) {\r\n            setElementToEdit(elements.find(e => e.id === selectedElements[0]))\r\n            setShowEditModal(true);\r\n            }\r\n        }\r\n    \r\n\r\n    async function handleRemoveSelected(e) {\r\n        e.preventDefault();\r\n\r\n        if (selectedElements.length === 0) return;\r\n\r\n        const endpoint = selectedTab.toLowerCase();\r\n\r\n        const confirmation = window.confirm(`Are you sure you want to delete ${selectedElements.length} items? This action cannot be undone.`);\r\n\r\n        if (confirmation) {\r\n            try {\r\n                await fetch(`http://localhost:8000/api/${endpoint}/delete/`, {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Session-Token': sessionStorage.getItem('token'),\r\n                        'Authorization': `Session ${sessionStorage.getItem('token')}`,\r\n                        'X-CSRFToken': getCsrf(),\r\n                    },\r\n                    body: JSON.stringify({ element_ids: selectedElements }),\r\n                    credentials: 'include',\r\n                })\r\n            } catch (Exception) {\r\n                console.log(\"Error deleting items: \", Exception);\r\n            } finally {\r\n                setSelectedElements([]);\r\n\r\n                await fetchItems(selectedTab);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleEdit = async(data) => {\r\n        // close on both edit and cancel\r\n        setShowEditModal(false);\r\n        if (data === null) return;\r\n\r\n        const endpoint = selectedTab.toLowerCase();\r\n\r\n        try {\r\n            // convert field names to snake_case before sending to API\r\n            const payload = convertKeysToSnake(data);\r\n\r\n            await fetch(`http://localhost:8000/api/${endpoint}/edit/?${endpoint.slice(0, -1)}_id=${elementToEdit.id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Session-Token': sessionStorage.getItem('token'),\r\n                    'Authorization': `Session ${sessionStorage.getItem('token')}`,\r\n                    'X-CSRFToken': getCsrf(),\r\n                },\r\n                body: JSON.stringify(payload),\r\n                credentials: 'include',\r\n            }).then(response => {\r\n                if (!response.ok) {\r\n                    console.log(\"Failed to edit item\")\r\n                }\r\n\r\n                return response.json();\r\n            }).then(data => {\r\n                console.log(data);\r\n            })\r\n        } catch (Exception) {\r\n\r\n        } finally {\r\n            setSelectedElements([]);\r\n            setElementToEdit(null);\r\n            fetchItems(selectedTab);\r\n        }\r\n    }\r\n\r\n    const handleCreate = async (data) => {\r\n        // close on both create and cancel\r\n        setOpenCreateModal(false);\r\n\r\n        // cancel action (CreateNewElement calls onCreate(null) on cancel)\r\n        if (data === null) return;\r\n        const endpoint = selectedTab.toLowerCase();\r\n        try {\r\n            // convert field names to snake_case before sending to API\r\n            const payload = convertKeysToSnake(data);\r\n\r\n            await fetch(\"http://localhost:8000/api/\" + endpoint + \"/create-new/\", {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Session-Token': sessionStorage.getItem('token'),\r\n                    'Authorization': `Session ${sessionStorage.getItem('token')}`,\r\n                    'X-CSRFToken': getCsrf(),\r\n                },\r\n                body: JSON.stringify(payload),\r\n                credentials: 'include',\r\n            }).then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error(\"Failed to create item\");\r\n                }\r\n\r\n                return response.json();\r\n            }).then(data => {\r\n                console.log(data);\r\n            })\r\n\r\n            await fetchItems(selectedTab);\r\n        } catch (error) {\r\n            console.error(\"Error creating item: \", error);\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        setFilter(\"\");\r\n       const storedUsername = username || sessionStorage.getItem('username');\r\n       if (storedUsername) {\r\n           setUsername(storedUsername);\r\n       }\r\n\r\n       fetchItems(selectedTab);\r\n\r\n       const loader = setTimeout(() => {\r\n           setLoading(false);\r\n       }, 800);\r\n\r\n       return () => {\r\n           clearTimeout(loader);\r\n                \r\n       }\r\n    }, [username, selectedTab, setUsername])\r\n\r\n    // for account modal\r\n    useEffect(() => {\r\n        \r\n        function handleClickOutside(e) {\r\n           if (accountModalRef.current &&\r\n               !accountModalRef.current.contains(e.target)\r\n           ) {\r\n               setOpenAccountModal(false);\r\n           }\r\n        }\r\n\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return () => document.removeEventListener('mousedown', handleClickOutside);\r\n    })\r\n\r\n    const handleTabSelect = (tab) => {\r\n        setElements([])\r\n        setSelectedElements([]);\r\n        setSelectedTab(tab);\r\n        setSearchQuery(\"\");\r\n\r\n        // fetch new items for the selected tab\r\n        console.log(\"Switching to tab:\", tab)\r\n        fetchItems(tab);\r\n    }\r\n\r\n    \r\n    \r\n\r\n    const handleSelectRow = (id) => {\r\n        console.log(id);\r\n        setSelectedElements((prev) => \r\n            prev.includes(id) ? prev.filter((ppid) => ppid !== id) : [...prev, id]\r\n        )\r\n    }\r\n    \r\n    const handleSelectAll = (checked) => {\r\n        if (checked) setSelectedElements(elements.map((p) => p.id));\r\n        else setSelectedElements([]);\r\n    }\r\n\r\n    if (loading) return <LoadingPage />;    \r\n\r\n    return (\r\n        <div className=\"min-h-screen screen overflow-auto items-center flex flex-col bg-[#fbfbfb]\">\r\n            <title>Dashboard</title>\r\n            <div className=\"min-w-[90%] min-h-[80%] max-w-[100%] max-h-[100%]\">\r\n                <div className=\"header bg-white w-full self-center flex flex-row justify-between mt-3 rounded-lg p-4 drop-shadow-md\">\r\n                    <div className=\"flex flex-row items-center\">\r\n                        <button onClick={(e) => {setSidebarOpen(!sidebarOpen)}} className=\"p-2 text-[22px] rounded-full hover:bg-black/10 text-zinc-700 mr-4\"><Icon icon=\"fa-solid fa-bars\"></Icon></button>\r\n                        <h1 className=\"text-3xl font-bold text-zinc-700\">Columbarium Dashboard</h1>\r\n                    </div>\r\n                    <div id=\"accountControl\" className=\"flex flex-row items-center\">\r\n                        <button onClick={() => setOpenAccountModal(!openAccountModal)} className=\"p-2 hover:underline text-md text-zinc-700 mr-4\"><Icon icon=\"fa-solid fa-user\" className=\"mr-3\"></Icon>{username !== \"\" ? username : \"User Not Found\"}</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"w-[100%] h-[85%] flex flex-row gap-3\">\r\n                    {/* Sidebar */}\r\n                    { sidebarOpen &&\r\n                    <div className=\"sidebar bg-white w-[20%] h-full self-start flex flex-col mt-3 rounded-lg p-4 drop-shadow-md gap-1\">\r\n\r\n                        {/* Tabs */}\r\n                        <Tab onClick={() => handleTabSelect(\"Customers\")} icon=\"fa-solid fa-users\">Customers</Tab>\r\n\r\n                        <Tab onClick={() => handleTabSelect(\"Payments\")} icon=\"fa-solid fa-credit-card\">Payments</Tab>\r\n\r\n                        <Tab onClick={() => handleTabSelect(\"Contacts\")} icon=\"fa-solid fa-address-book\">Contacts</Tab>\r\n\r\n                        <Tab onClick={() => handleTabSelect(\"Occupants\")} icon=\"fa-solid fa-box-open\">Occupants</Tab>\r\n\r\n                        <Tab onClick={() => handleTabSelect(\"Niches\")} icon=\"fa-solid fa-square-person-confined\">Niches</Tab>\r\n\r\n                        {/* Audit Logs*/}\r\n                        {sessionStorage.getItem(\"permissions\").split(\",\").includes(\"view_audit\") && <Tab onClick={() => handleTabSelect(\"Audit\")} icon=\"fa-solid fa-users\">Audit Logs</Tab>}\r\n\r\n                        {/* User Account Control */}\r\n                        {sessionStorage.getItem(\"permissions\").split(\",\").includes(\"manage_users\") &&\r\n                        <Tab onClick={() => handleTabSelect(\"Users\")} icon=\"fa-solid fa-user-shield\">User Management</Tab>}\r\n\r\n\r\n                        <Tab onClick={() => handleTabSelect(\"Analytics\")} icon=\"fa-solid fa-chart-simple\">Analytics</Tab>\r\n                    </div>}\r\n\r\n                    \r\n                    {/* Main Content */}\r\n                    <div className=\"content transition-all duration-300 ease-out bg-white w-full h-full flex flex-col mt-3 rounded-lg p-4 drop-shadow-md overflow-auto\">\r\n\r\n                        {/* Dynamic Tab Content rendered from a small config to keep things DRY */}\r\n                        {(() => {\r\n                            const tabs = {\r\n                                Customers: {\r\n                                    columns: [\r\n                                        {label: \"\", key: \"_select\" },\r\n                                        { label: \"Customer ID\", key: \"id\", type: 'number' },\r\n                                        { label: \"Full Name\", key: \"name\", type: 'text' },\r\n                                        { label: \"Contact Number\", key: \"contactNumber\", type: 'text' },\r\n                                        { label: \"Email\", key: \"email\", type: 'text' },\r\n                                        { label: \"Address\", key: \"address\", type: 'text' },\r\n                                        { label: \"Deceased's Name\", key: \"deceasedName\", type: 'text' },\r\n                                        { label: \"Date Deceased\", key: \"deceasedDate\", type: 'date' },\r\n                                        { label: \"Relationship to Deceased\", key: \"relationshipToDeceased\", type: 'text' }\r\n                                    ],\r\n                                    toolbarButtons: [\r\n                                        { label: 'Add Customer', icon: 'fa-solid fa-plus', bg: 'bg-blue-500', textClass: 'text-white', onClick: () => setOpenCreateModal(true) },\r\n                                        { label: 'Edit Selected', icon: 'fa-solid fa-pencil', onClick: (e) => { handleEditClick(e) } },\r\n                                        { label: `(${selectedElements.length}) Remove Selected`, icon: 'fa fa-trash', bg: 'bg-red-500', textClass: 'text-white', onClick: (e) => { handleRemoveSelected(e) } },\r\n                                    ],\r\n                                    rowRenderer: (row) => (\r\n                                        <>\r\n                                            <td className=\"p-2\">#{(row.id ?? '').toString().padStart(3, \"0\")}</td>\r\n                                            <td className=\"p-2\">{row.name ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.contactNumber ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.email ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.address ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.deceasedName ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.deceasedDate ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.relationshipToDeceased ?? ''}</td>\r\n                                        </>\r\n                                    )\r\n                                },\r\n                                Payments: {\r\n                                    columns: [\r\n                                        { label: \"\", key: \"_select\" },\r\n                                        { label: \"Payment ID\", key: \"id\", type: 'number' },\r\n                                        { label: \"Customer Name\", key: \"payer\", type: 'text' },\r\n                                        { label: \"Amount Paid\", key: \"amountPaid\", type: 'number' },\r\n                                        { label: \"Amount Due\", key: \"amountDue\", type: 'number' },\r\n                                        { label: \"Remaining Balance\", key: \"remainingBalance\", type: 'number' },\r\n                                        { label: \"Maintenance Fee\", key: \"maintenanceFee\", type: 'number' },\r\n                                        { label: \"Date Paid\", key: \"paymentDate\", type: 'date' },\r\n                                        { label: \"Status\", key: \"status\", type: 'text' }\r\n                                    ],\r\n                                    toolbarButtons: [\r\n                                        { label: 'Add Payment', icon: 'fa-solid fa-plus', bg: 'bg-blue-500', textClass: 'text-white', onClick: () => setOpenCreateModal(true) },\r\n                                        { label: 'Edit Selected', icon: 'fa-solid fa-pencil', onClick: (e) => { handleEditClick(e) } },\r\n                                        { label: `(${selectedElements.length}) Remove Selected`, icon: 'fa fa-trash', bg: 'bg-red-500', textClass: 'text-white', onClick: (e) => { handleRemoveSelected(e) } },\r\n                                    ],\r\n                                    rowRenderer: (row) => (\r\n                                        <>\r\n                        <td className=\"p-2\">#{(row.id ?? '').toString().padStart(3, \"0\")}</td>\r\n                        <td className=\"p-2\">{row.payer ?? row.payerName ?? ''}</td>\r\n                        <td className=\"p-2\">₱ {Number(row.amountPaid ?? row.amountPaid ?? row.amount_paid ?? 0).toLocaleString(\"en-US\", {minimumFractionDigits: 2 })}</td>\r\n                        <td className=\"p-2\">₱ {Number(row.amountDue ?? row.amount_due ?? 0).toLocaleString(\"en-US\", { minimumFractionDigits: 2 })}</td>\r\n                        <td className=\"p-2\">₱ {Number(row.remainingBalance ?? row.remaining_balance ?? 0).toLocaleString(\"en-US\", { minimumFractionDigits: 2 })}</td>\r\n                        <td className=\"p-2\">₱ {Number(row.maintenanceFee ?? row.maintenance_fee ?? 0).toLocaleString(\"en-US\", { minimumFractionDigits: 2 })}</td>\r\n                        <td className=\"p-2\">{row.paymentDate ? new Intl.DateTimeFormat('en-US').format(new Date(row.paymentDate)) : ''}</td>\r\n                        <td className=\"p-2\"><StatusTag status={row.status ?? row.state ?? ''} />\r\n                                    </td>\r\n                                        </>\r\n                                    )\r\n                                },\r\n                                Contacts: {\r\n                                    columns: [\r\n                                        { label: \"\", key: \"_select\" },\r\n                                        { label: \"Contact ID\", key: \"id\", type: 'number' },\r\n                                        { label: \"Family Name\", key: \"familyName\", type: 'text' },\r\n                                        { label: \"Deceased's Name\", key: \"deceasedName\", type: 'text' },\r\n                                        { label: \"Deceased Date\", key: \"deceasedDate\", type: 'date' },\r\n                                        { label: \"Address\", key: \"address\", type: 'text' },\r\n                                        { label: \"Contact Number\", key: \"contactNumber\", type: 'text' }\r\n                                    ],\r\n                                    toolbarButtons: [\r\n                                        { label: 'Add Contact', icon: 'fa-solid fa-plus', bg: 'bg-blue-500', textClass: 'text-white', onClick: () => setOpenCreateModal(true) },\r\n                                        { label: 'Edit Selected', icon: 'fa-solid fa-pencil', onClick: (e) => { handleEditClick(e) } },\r\n                                        { label: `(${selectedElements.length}) Remove Selected`, icon: 'fa fa-trash', textClass:'text-white', bg: 'bg-red-500 text-white', onClick: handleRemoveSelected },\r\n                                    ],\r\n                                    rowRenderer: (row) => (\r\n                                        <>\r\n                                            <td className=\"p-2\">#{(row.id ?? '').toString().padStart(3, \"0\")}</td>\r\n                                            <td className=\"p-2\">{row.familyName ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.deceasedName ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.deceasedDate ? new Intl.DateTimeFormat('en-US').format(new Date(row.deceasedDate)) : ''}</td>\r\n                                            <td className=\"p-2\">{row.address ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.contactNumber ?? ''}</td>\r\n                                            <td className=\"p-2\"><StatusTag status={row.status ?? ''} />\r\n                                    </td>\r\n                                        </>\r\n                                    )\r\n                                },\r\n                                Occupants: {\r\n                                    columns: [\r\n                                        { label: \"\", key: \"_select\" },\r\n                                        { label: \"Occupant ID\", key: \"id\", type: 'number' },\r\n                                        { label: \"Name\", key: \"name\", type: 'text' },\r\n                                        { label: \"Date of Interment\", key: \"intermentDate\", type: 'date' },\r\n                                        { label: \"Niche\", key: \"niche\", type: 'text' }\r\n                                    ],\r\n                                    toolbarButtons: [\r\n                                        { label: 'Add Occupant', icon: 'fa-solid fa-plus', bg: 'bg-blue-500', textClass: 'text-white', onClick: () => setOpenCreateModal(true) },\r\n                                        { label: 'Edit Selected', icon: 'fa-solid fa-pencil', onClick: (e) => { handleEditClick(e) } },\r\n                                        { label: `(${selectedElements.length}) Remove Selected`, icon: 'fa fa-trash', bg: 'bg-red-500', textClass: 'text-white', onClick: handleRemoveSelected },\r\n                                    ],\r\n                                    rowRenderer: (row) => (\r\n                                        <>\r\n                                            <td className=\"p-2\">#{(row.id ?? '').toString().padStart(3, \"0\")}</td>\r\n                                            <td className=\"p-2\">{row.name ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.intermentDate ? new Intl.DateTimeFormat('en-US').format(new Date(row.intermentDate)) : ''}</td>\r\n                                            <td className=\"p-2\">{row.niche ?? ''}</td>\r\n                                        </>\r\n                                    )   \r\n                                },\r\n                                Niches: {\r\n                                    columns: [\r\n                                        { label: \"\", key: \"_select\" },\r\n                                        { label: \"Niche ID\", key: \"id\", type: 'number' },\r\n                                        { label: \"Deceased's Name\", key: \"name\", type: 'text' },\r\n                                        { label: \"Location\", key: \"location\", type: 'text' },\r\n                                        { label: \"Status\", key: \"status\", type: 'text' }\r\n                                    ],\r\n                                    toolbarButtons: [\r\n                                        { label: 'Add Niche', icon: 'fa-solid fa-plus', bg: 'bg-blue-500', textClass: 'text-white', onClick: () => setOpenCreateModal(true) },\r\n                                        { label: 'Edit Selected', icon: 'fa-solid fa-pencil', onClick: handleEditClick },\r\n                                        { label: `(${selectedElements.length}) Remove Selected`, icon: 'fa fa-trash', bg: 'bg-red-500', textClass: 'text-white', onClick: handleRemoveSelected },\r\n                                    ],\r\n                                    rowRenderer: (row) => (\r\n                                        <>\r\n                                            <td className=\"p-2\">#{(row.id ?? '').toString().padStart(3, \"0\")}</td>\r\n                                            <td className=\"p-2\">{row.name ?? row.deceased_name ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.location ?? ''}</td>\r\n                                            <td className=\"p-2\"><StatusTag status={row.status ?? ''} /></td>\r\n                                        </>\r\n                                    )\r\n                                },\r\n                                Audit: {\r\n                                    columns: [\r\n                                        { label: \"User\", key: \"user\", type: 'text' },\r\n                                        { label: \"Role\", key: \"role\", type: 'text' },\r\n                                        { label: \"IP Address\", key: \"ipAddress\", type: 'text' },\r\n                                        { label: \"Object ID\", key: \"objectId\", type: 'text' },\r\n                                        { label: \"Action\", key: \"action\", type: 'text' },\r\n                                        { label: \"Application\", key: \"app\", type: 'text' },\r\n                                        { label: \"URL\", key: \"path\", type: 'text' },\r\n                                        { label: \"Timestamp\", key: \"timestamp\", type: 'date' },\r\n                                    ],\r\n                                    toolbarButtons: [],\r\n                                    rowRenderer: (row) => (\r\n                                        <>\r\n                                            <td className=\"p-2\">{row.user ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.role ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.ipAddress ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.responseData?.ids?.join(', ') ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.action ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.app ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.path ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.timestamp ? new Intl.DateTimeFormat('en-US', {year:'numeric', month:'numeric',day:'numeric', hour:'numeric', minute:'numeric', second:'numeric'}).format(new Date(row.timestamp)) : ''}</td>\r\n                                        </>\r\n                                    )\r\n                                },\r\n                                Users: {\r\n                                    columns: [\r\n                                        { label: \"\", key: \"_select\" },\r\n                                        { label: \"User ID\", key: \"id\", type: 'number' },\r\n                                        { label: \"Username\", key: \"username\", type: 'text' },\r\n                                        { label: \"Role\", key: \"role\", type: 'text' },\r\n                                    ],\r\n                                    toolbarButtons: [\r\n                                        { label: 'Add User', icon: 'fa-solid fa-plus', bg: 'bg-blue-500', textClass: 'text-white', onClick: () => setOpenCreateModal(true) },\r\n                                        { label: 'Edit Selected', icon: 'fa-solid fa-pencil', onClick: handleEditClick },\r\n                                        { label: `(${selectedElements.length}) Remove Selected`, icon: 'fa fa-trash', bg: 'bg-red-500', textClass: 'text-white', onClick: handleRemoveSelected },\r\n                                    ],\r\n                                    rowRenderer: (row) => (\r\n                                        <>\r\n                                            \r\n                                            <td className=\"p-2\">{row.id ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.username ?? ''}</td>\r\n                                            <td className=\"p-2\">{row.role ?? ''}</td>\r\n                                        </>\r\n                                    )\r\n                                }\r\n                                // Add other tabs here\r\n                            }\r\n\r\n                            const cfg = tabs[selectedTab];\r\n                            if (!cfg) return null;\r\n\r\n                            return (\r\n                                <TabContent\r\n                                    title={selectedTab}\r\n                                    searchQuery={searchQuery}\r\n                                    onSearchChange={setSearchQuery}\r\n                                    toolbarButtons={cfg.toolbarButtons}\r\n                                    columns={cfg.columns}\r\n                                    data={elements.length > 0 ? elements : []}\r\n                                    selectedItems={selectedElements}\r\n                                    onSelectAll={handleSelectAll}\r\n                                    onSelectRow={handleSelectRow}\r\n                                    getRowKey={(row) => row.id}\r\n                                    onFilterChange={(value) => setFilter(value)}\r\n                                >\r\n                                    {cfg.rowRenderer}\r\n                                </TabContent>\r\n                            )\r\n                        })()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            { openCreateModal && <CreateNewElement tab={selectedTab} onCreate={handleCreate} fields={fieldsByTab[selectedTab]} /> }\r\n            { /* EditElement modal can be added here similarly when needed */ }\r\n            { showEditModal && <EditElement tab={selectedTab} elementData={elementToEdit} fields={fieldsByTab[selectedTab]} onEdit={handleEdit} />}\r\n\r\n            <div ref={accountModalRef}>\r\n                <AccountModal isOpen={openAccountModal} username={username} role={sessionStorage.getItem(\"role\") || 'Staff'} />\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}